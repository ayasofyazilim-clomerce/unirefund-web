// This file is auto-generated by @hey-api/openapi-ts

export const $PagedResultDto_NameAndIdDto = {
  type: "object",
  properties: {
    items: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
          },
          fullName: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    totalCount: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const $PagedResultDto_RefundListItem = {
  type: "object",
  properties: {
    items: {
      type: "array",
      items: {
        required: [
          "processedDate",
          "reconciliationStatus",
          "referenceNumber",
          "refundAmount",
          "refundAmountInCurrency",
          "refundCurrency",
          "refundTypeEnum",
          "status",
          "tagIds",
          "travellerDocumentNumber",
          "travellerFeeAmount",
          "userDeviceName",
        ],
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
          },
          userDeviceName: {
            minLength: 1,
            type: "string",
            readOnly: true,
          },
          refundTypeEnum: {
            enum: ["Cash", "CreditCard", "BankTransfer", "Wallet", "CashViaPartner", "IbanTransfer"],
            type: "string",
          },
          travellerDocumentNumber: {
            minLength: 1,
            type: "string",
            readOnly: true,
          },
          refundAmount: {
            type: "number",
            format: "double",
            readOnly: true,
          },
          refundCurrency: {
            minLength: 1,
            type: "string",
            readOnly: true,
          },
          refundAmountInCurrency: {
            type: "number",
            format: "double",
            readOnly: true,
          },
          travellerFeeAmount: {
            type: "number",
            format: "double",
            readOnly: true,
          },
          referenceNumber: {
            minLength: 1,
            type: "string",
            readOnly: true,
          },
          status: {
            enum: [
              "NotPaid",
              "PendingDeparture",
              "Blocked",
              "Processing",
              "PartlyPaid",
              "Paid",
              "Overpaid",
              "Rejected",
              "Cancelled",
              "Error",
            ],
            type: "string",
          },
          reconciliationStatus: {
            enum: ["Approved", "NotApproved", "Error", "InProgress"],
            type: "string",
          },
          processedDate: {
            type: "string",
            format: "date-time",
            readOnly: true,
          },
          tagIds: {
            type: "array",
            items: {
              type: "string",
              format: "uuid",
            },
            readOnly: true,
          },
          paidDate: {
            type: "string",
            format: "date-time",
            nullable: true,
            readOnly: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    totalCount: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_CRMService_RefundPoints_RefundPointDetailForRefund = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    name: {
      type: "string",
      nullable: true,
    },
    fullAddress: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_IdentityService_Users_NameAndIdDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    fullName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Enums_RefundReconciliationStatus = {
  enum: ["Approved", "NotApproved", "Error", "InProgress"],
  type: "string",
} as const;

export const $UniRefund_RefundService_Enums_RefundStatus = {
  enum: [
    "NotPaid",
    "PendingDeparture",
    "Blocked",
    "Processing",
    "PartlyPaid",
    "Paid",
    "Overpaid",
    "Rejected",
    "Cancelled",
    "Error",
  ],
  type: "string",
} as const;

export const $UniRefund_RefundService_Refunds_CreateRefundCardInfoDto = {
  type: "object",
  properties: {
    cardNumber: {
      type: "string",
      format: "credit-card",
      default: "3700 0000 0000 002",
      nullable: true,
    },
    cardExpiryMonth: {
      maximum: 12,
      minimum: 1,
      type: "integer",
      format: "int32",
    },
    cardExpiryYear: {
      type: "integer",
      format: "int32",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Refunds_CreateRefundDto = {
  required: ["refundPointId", "refundTypeEnum", "tagIds"],
  type: "object",
  properties: {
    tagIds: {
      minItems: 1,
      type: "array",
      items: {
        type: "string",
        format: "uuid",
      },
    },
    refundTypeEnum: {
      enum: ["Cash", "CreditCard", "BankTransfer", "Wallet", "CashViaPartner", "IbanTransfer"],
      type: "string",
    },
    cardInfo: {
      type: "object",
      properties: {
        cardNumber: {
          type: "string",
          format: "credit-card",
          default: "3700 0000 0000 002",
          nullable: true,
        },
        cardExpiryMonth: {
          maximum: 12,
          minimum: 1,
          type: "integer",
          format: "int32",
        },
        cardExpiryYear: {
          type: "integer",
          format: "int32",
        },
      },
      additionalProperties: false,
    },
    ibanInfo: {
      required: ["bankName", "bic", "iban"],
      type: "object",
      properties: {
        iban: {
          maxLength: 34,
          minLength: 1,
          type: "string",
        },
        bic: {
          maxLength: 11,
          minLength: 1,
          type: "string",
        },
        bankName: {
          maxLength: 11,
          minLength: 1,
          type: "string",
        },
        bankCountryCode: {
          type: "string",
          nullable: true,
        },
        bankCity: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    refundPointId: {
      type: "string",
      format: "uuid",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Refunds_CreateRefundIbanInfoDto = {
  required: ["bankName", "bic", "iban"],
  type: "object",
  properties: {
    iban: {
      maxLength: 34,
      minLength: 1,
      type: "string",
    },
    bic: {
      maxLength: 11,
      minLength: 1,
      type: "string",
    },
    bankName: {
      maxLength: 11,
      minLength: 1,
      type: "string",
    },
    bankCountryCode: {
      type: "string",
      nullable: true,
    },
    bankCity: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Refunds_CreateRefundResponseDto = {
  required: ["id"],
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Refunds_GetDetailAsync_RefundDetailDto = {
  required: [
    "processedDate",
    "reconciliationStatus",
    "referenceNumber",
    "refundAmount",
    "refundAmountInCurrency",
    "refundCurrency",
    "refundPoint",
    "refundTypeEnum",
    "status",
    "tagIds",
    "traveller",
    "travellerDocumentNumber",
    "travellerFeeAmount",
    "userDeviceName",
  ],
  type: "object",
  properties: {
    refundPoint: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        name: {
          type: "string",
          nullable: true,
        },
        fullAddress: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    traveller: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        firstName: {
          type: "string",
          nullable: true,
        },
        lastName: {
          type: "string",
          nullable: true,
        },
        birthDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        nationalityCountryCode2: {
          type: "string",
          nullable: true,
        },
        nationalityCountryName: {
          type: "string",
          nullable: true,
        },
        languagePreferenceCultureName: {
          type: "string",
          nullable: true,
        },
        gender: {
          enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
          type: "string",
        },
        userAccountId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        hasUserAccount: {
          type: "boolean",
          readOnly: true,
        },
        travellerDocuments: {
          type: "array",
          items: {
            type: "object",
            properties: {
              id: {
                type: "string",
                format: "uuid",
              },
              travelDocumentNumber: {
                type: "string",
                nullable: true,
              },
              residenceCountryCode2: {
                type: "string",
                nullable: true,
              },
              residenceCountryName: {
                type: "string",
                nullable: true,
              },
              nationalityCountryCode2: {
                type: "string",
                nullable: true,
              },
              nationalityCountryName: {
                type: "string",
                nullable: true,
              },
              firstName: {
                type: "string",
                nullable: true,
              },
              lastName: {
                type: "string",
                nullable: true,
              },
              fullName: {
                type: "string",
                nullable: true,
                readOnly: true,
              },
              birthDate: {
                type: "string",
                format: "date-time",
                nullable: true,
              },
              issueDate: {
                type: "string",
                format: "date-time",
                nullable: true,
              },
              expirationDate: {
                type: "string",
                format: "date-time",
                nullable: true,
              },
              identificationType: {
                enum: ["IdCard", "Passport"],
                type: "string",
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        primaryAddress: {
          type: "object",
          properties: {
            id: {
              type: "string",
              format: "uuid",
            },
            fullAddress: {
              type: "string",
              nullable: true,
            },
            isPrimary: {
              type: "boolean",
            },
            type: {
              enum: ["HOME", "OFFICE"],
              type: "string",
            },
          },
          additionalProperties: false,
        },
        primaryEmail: {
          type: "object",
          properties: {
            id: {
              type: "string",
              format: "uuid",
            },
            emailAddress: {
              type: "string",
              nullable: true,
            },
            isPrimary: {
              type: "boolean",
            },
            type: {
              enum: ["WORK", "PERSONAL"],
              type: "string",
            },
          },
          additionalProperties: false,
        },
        primaryTelephone: {
          type: "object",
          properties: {
            id: {
              type: "string",
              format: "uuid",
            },
            ituCountryCode: {
              type: "string",
              nullable: true,
            },
            areaCode: {
              type: "string",
              nullable: true,
            },
            localNumber: {
              type: "string",
              nullable: true,
            },
            fullNumber: {
              type: "string",
              nullable: true,
              readOnly: true,
            },
            isPrimary: {
              type: "boolean",
            },
            type: {
              enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
              type: "string",
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    userDeviceName: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    refundTypeEnum: {
      enum: ["Cash", "CreditCard", "BankTransfer", "Wallet", "CashViaPartner", "IbanTransfer"],
      type: "string",
    },
    travellerDocumentNumber: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    refundAmount: {
      type: "number",
      format: "double",
      readOnly: true,
    },
    refundCurrency: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    refundAmountInCurrency: {
      type: "number",
      format: "double",
      readOnly: true,
    },
    travellerFeeAmount: {
      type: "number",
      format: "double",
      readOnly: true,
    },
    referenceNumber: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    status: {
      enum: [
        "NotPaid",
        "PendingDeparture",
        "Blocked",
        "Processing",
        "PartlyPaid",
        "Paid",
        "Overpaid",
        "Rejected",
        "Cancelled",
        "Error",
      ],
      type: "string",
    },
    reconciliationStatus: {
      enum: ["Approved", "NotApproved", "Error", "InProgress"],
      type: "string",
    },
    processedDate: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    paidDate: {
      type: "string",
      format: "date-time",
      nullable: true,
      readOnly: true,
    },
    tagIds: {
      type: "array",
      items: {
        type: "string",
        format: "uuid",
      },
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Refunds_GetListAsync_RefundListItem = {
  required: [
    "processedDate",
    "reconciliationStatus",
    "referenceNumber",
    "refundAmount",
    "refundAmountInCurrency",
    "refundCurrency",
    "refundTypeEnum",
    "status",
    "tagIds",
    "travellerDocumentNumber",
    "travellerFeeAmount",
    "userDeviceName",
  ],
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    userDeviceName: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    refundTypeEnum: {
      enum: ["Cash", "CreditCard", "BankTransfer", "Wallet", "CashViaPartner", "IbanTransfer"],
      type: "string",
    },
    travellerDocumentNumber: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    refundAmount: {
      type: "number",
      format: "double",
      readOnly: true,
    },
    refundCurrency: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    refundAmountInCurrency: {
      type: "number",
      format: "double",
      readOnly: true,
    },
    travellerFeeAmount: {
      type: "number",
      format: "double",
      readOnly: true,
    },
    referenceNumber: {
      minLength: 1,
      type: "string",
      readOnly: true,
    },
    status: {
      enum: [
        "NotPaid",
        "PendingDeparture",
        "Blocked",
        "Processing",
        "PartlyPaid",
        "Paid",
        "Overpaid",
        "Rejected",
        "Cancelled",
        "Error",
      ],
      type: "string",
    },
    reconciliationStatus: {
      enum: ["Approved", "NotApproved", "Error", "InProgress"],
      type: "string",
    },
    processedDate: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    tagIds: {
      type: "array",
      items: {
        type: "string",
        format: "uuid",
      },
      readOnly: true,
    },
    paidDate: {
      type: "string",
      format: "date-time",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_RefundService_Refunds_GetListAsync_RefundTextFilterType = {
  enum: ["TravellerDocumentNumber", "CardNumber", "ReferenceNumber", "InvoiceNumber"],
  type: "string",
} as const;

export const $UniRefund_RefundService_Refunds_GetRefundStatistics_RefundStatistics = {
  type: "object",
  properties: {
    refundsCount: {
      type: "integer",
      format: "int32",
    },
    refundsAmount: {
      type: "number",
      format: "double",
    },
    refundsCashBalance: {
      type: "number",
      format: "double",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TagService_Tags_Enums_RefundType = {
  enum: ["Cash", "CreditCard", "BankTransfer", "Wallet", "CashViaPartner", "IbanTransfer"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Addresses_AddressDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    fullAddress: {
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Emails_EmailDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    emailAddress: {
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["WORK", "PERSONAL"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Enums_AddressType = {
  enum: ["HOME", "OFFICE"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_EmailType = {
  enum: ["WORK", "PERSONAL"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_GenderType = {
  enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_IdentificationType = {
  enum: ["IdCard", "Passport"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_TelephoneType = {
  enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Telephones_TelephoneDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    ituCountryCode: {
      type: "string",
      nullable: true,
    },
    areaCode: {
      type: "string",
      nullable: true,
    },
    localNumber: {
      type: "string",
      nullable: true,
    },
    fullNumber: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_TravellerDocumentProfileDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
    residenceCountryCode2: {
      type: "string",
      nullable: true,
    },
    residenceCountryName: {
      type: "string",
      nullable: true,
    },
    nationalityCountryCode2: {
      type: "string",
      nullable: true,
    },
    nationalityCountryName: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    fullName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    issueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expirationDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    identificationType: {
      enum: ["IdCard", "Passport"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_TravellerDetailProfileDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nationalityCountryCode2: {
      type: "string",
      nullable: true,
    },
    nationalityCountryName: {
      type: "string",
      nullable: true,
    },
    languagePreferenceCultureName: {
      type: "string",
      nullable: true,
    },
    gender: {
      enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
      type: "string",
    },
    userAccountId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    hasUserAccount: {
      type: "boolean",
      readOnly: true,
    },
    travellerDocuments: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
          },
          travelDocumentNumber: {
            type: "string",
            nullable: true,
          },
          residenceCountryCode2: {
            type: "string",
            nullable: true,
          },
          residenceCountryName: {
            type: "string",
            nullable: true,
          },
          nationalityCountryCode2: {
            type: "string",
            nullable: true,
          },
          nationalityCountryName: {
            type: "string",
            nullable: true,
          },
          firstName: {
            type: "string",
            nullable: true,
          },
          lastName: {
            type: "string",
            nullable: true,
          },
          fullName: {
            type: "string",
            nullable: true,
            readOnly: true,
          },
          birthDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          issueDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          expirationDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          identificationType: {
            enum: ["IdCard", "Passport"],
            type: "string",
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    primaryAddress: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        fullAddress: {
          type: "string",
          nullable: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["HOME", "OFFICE"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    primaryEmail: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        emailAddress: {
          type: "string",
          nullable: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["WORK", "PERSONAL"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    primaryTelephone: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        ituCountryCode: {
          type: "string",
          nullable: true,
        },
        areaCode: {
          type: "string",
          nullable: true,
        },
        localNumber: {
          type: "string",
          nullable: true,
        },
        fullNumber: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationAuthConfigurationDto = {
  type: "object",
  properties: {
    grantedPolicies: {
      type: "object",
      additionalProperties: {
        type: "boolean",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationConfigurationDto = {
  type: "object",
  properties: {
    localization: {
      type: "object",
      properties: {
        values: {
          type: "object",
          additionalProperties: {
            type: "object",
            additionalProperties: {
              type: "string",
            },
          },
          nullable: true,
        },
        resources: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              texts: {
                type: "object",
                additionalProperties: {
                  type: "string",
                },
                nullable: true,
              },
              baseResources: {
                type: "array",
                items: {
                  type: "string",
                },
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        languages: {
          type: "array",
          items: {
            type: "object",
            properties: {
              cultureName: {
                type: "string",
                nullable: true,
              },
              uiCultureName: {
                type: "string",
                nullable: true,
              },
              displayName: {
                type: "string",
                nullable: true,
              },
              twoLetterISOLanguageName: {
                type: "string",
                nullable: true,
                readOnly: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        currentCulture: {
          type: "object",
          properties: {
            displayName: {
              type: "string",
              nullable: true,
            },
            englishName: {
              type: "string",
              nullable: true,
            },
            threeLetterIsoLanguageName: {
              type: "string",
              nullable: true,
            },
            twoLetterIsoLanguageName: {
              type: "string",
              nullable: true,
            },
            isRightToLeft: {
              type: "boolean",
            },
            cultureName: {
              type: "string",
              nullable: true,
            },
            name: {
              type: "string",
              nullable: true,
            },
            nativeName: {
              type: "string",
              nullable: true,
            },
            dateTimeFormat: {
              type: "object",
              properties: {
                calendarAlgorithmType: {
                  type: "string",
                  nullable: true,
                },
                dateTimeFormatLong: {
                  type: "string",
                  nullable: true,
                },
                shortDatePattern: {
                  type: "string",
                  nullable: true,
                },
                fullDateTimePattern: {
                  type: "string",
                  nullable: true,
                },
                dateSeparator: {
                  type: "string",
                  nullable: true,
                },
                shortTimePattern: {
                  type: "string",
                  nullable: true,
                },
                longTimePattern: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          additionalProperties: false,
        },
        defaultResourceName: {
          type: "string",
          nullable: true,
        },
        languagesMap: {
          type: "object",
          additionalProperties: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                value: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          nullable: true,
        },
        languageFilesMap: {
          type: "object",
          additionalProperties: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                value: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    auth: {
      type: "object",
      properties: {
        grantedPolicies: {
          type: "object",
          additionalProperties: {
            type: "boolean",
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    setting: {
      type: "object",
      properties: {
        values: {
          type: "object",
          additionalProperties: {
            type: "string",
            nullable: true,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    currentUser: {
      type: "object",
      properties: {
        isAuthenticated: {
          type: "boolean",
        },
        id: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        tenantId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        impersonatorUserId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        impersonatorTenantId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        impersonatorUserName: {
          type: "string",
          nullable: true,
        },
        impersonatorTenantName: {
          type: "string",
          nullable: true,
        },
        userName: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        surName: {
          type: "string",
          nullable: true,
        },
        email: {
          type: "string",
          nullable: true,
        },
        emailVerified: {
          type: "boolean",
        },
        phoneNumber: {
          type: "string",
          nullable: true,
        },
        phoneNumberVerified: {
          type: "boolean",
        },
        roles: {
          type: "array",
          items: {
            type: "string",
          },
          nullable: true,
        },
        sessionId: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    features: {
      type: "object",
      properties: {
        values: {
          type: "object",
          additionalProperties: {
            type: "string",
            nullable: true,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    globalFeatures: {
      type: "object",
      properties: {
        enabledFeatures: {
          uniqueItems: true,
          type: "array",
          items: {
            type: "string",
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    multiTenancy: {
      type: "object",
      properties: {
        isEnabled: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    currentTenant: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    timing: {
      type: "object",
      properties: {
        timeZone: {
          type: "object",
          properties: {
            iana: {
              type: "object",
              properties: {
                timeZoneName: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            windows: {
              type: "object",
              properties: {
                timeZoneId: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    clock: {
      type: "object",
      properties: {
        kind: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    objectExtensions: {
      type: "object",
      properties: {
        modules: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              entities: {
                type: "object",
                additionalProperties: {
                  type: "object",
                  properties: {
                    properties: {
                      type: "object",
                      additionalProperties: {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            nullable: true,
                          },
                          typeSimple: {
                            type: "string",
                            nullable: true,
                          },
                          displayName: {
                            type: "object",
                            properties: {
                              name: {
                                type: "string",
                                nullable: true,
                              },
                              resource: {
                                type: "string",
                                nullable: true,
                              },
                            },
                            additionalProperties: false,
                          },
                          api: {
                            type: "object",
                            properties: {
                              onGet: {
                                type: "object",
                                properties: {
                                  isAvailable: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onCreate: {
                                type: "object",
                                properties: {
                                  isAvailable: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onUpdate: {
                                type: "object",
                                properties: {
                                  isAvailable: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                            },
                            additionalProperties: false,
                          },
                          ui: {
                            type: "object",
                            properties: {
                              onTable: {
                                type: "object",
                                properties: {
                                  isVisible: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onCreateForm: {
                                type: "object",
                                properties: {
                                  isVisible: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onEditForm: {
                                type: "object",
                                properties: {
                                  isVisible: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              lookup: {
                                type: "object",
                                properties: {
                                  url: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  resultListPropertyName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  displayPropertyName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  valuePropertyName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  filterParamName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                },
                                additionalProperties: false,
                              },
                            },
                            additionalProperties: false,
                          },
                          attributes: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                typeSimple: {
                                  type: "string",
                                  nullable: true,
                                },
                                config: {
                                  type: "object",
                                  additionalProperties: {},
                                  nullable: true,
                                },
                              },
                              additionalProperties: false,
                            },
                            nullable: true,
                          },
                          configuration: {
                            type: "object",
                            additionalProperties: {},
                            nullable: true,
                          },
                          defaultValue: {
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                      nullable: true,
                    },
                    configuration: {
                      type: "object",
                      additionalProperties: {},
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                nullable: true,
              },
              configuration: {
                type: "object",
                additionalProperties: {},
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        enums: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              fields: {
                type: "array",
                items: {
                  type: "object",
                  properties: {
                    name: {
                      type: "string",
                      nullable: true,
                    },
                    value: {
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                nullable: true,
              },
              localizationResource: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationFeatureConfigurationDto = {
  type: "object",
  properties: {
    values: {
      type: "object",
      additionalProperties: {
        type: "string",
        nullable: true,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationGlobalFeatureConfigurationDto = {
  type: "object",
  properties: {
    enabledFeatures: {
      uniqueItems: true,
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationConfigurationDto = {
  type: "object",
  properties: {
    values: {
      type: "object",
      additionalProperties: {
        type: "object",
        additionalProperties: {
          type: "string",
        },
      },
      nullable: true,
    },
    resources: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          texts: {
            type: "object",
            additionalProperties: {
              type: "string",
            },
            nullable: true,
          },
          baseResources: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    languages: {
      type: "array",
      items: {
        type: "object",
        properties: {
          cultureName: {
            type: "string",
            nullable: true,
          },
          uiCultureName: {
            type: "string",
            nullable: true,
          },
          displayName: {
            type: "string",
            nullable: true,
          },
          twoLetterISOLanguageName: {
            type: "string",
            nullable: true,
            readOnly: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    currentCulture: {
      type: "object",
      properties: {
        displayName: {
          type: "string",
          nullable: true,
        },
        englishName: {
          type: "string",
          nullable: true,
        },
        threeLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        twoLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        isRightToLeft: {
          type: "boolean",
        },
        cultureName: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        nativeName: {
          type: "string",
          nullable: true,
        },
        dateTimeFormat: {
          type: "object",
          properties: {
            calendarAlgorithmType: {
              type: "string",
              nullable: true,
            },
            dateTimeFormatLong: {
              type: "string",
              nullable: true,
            },
            shortDatePattern: {
              type: "string",
              nullable: true,
            },
            fullDateTimePattern: {
              type: "string",
              nullable: true,
            },
            dateSeparator: {
              type: "string",
              nullable: true,
            },
            shortTimePattern: {
              type: "string",
              nullable: true,
            },
            longTimePattern: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    defaultResourceName: {
      type: "string",
      nullable: true,
    },
    languagesMap: {
      type: "object",
      additionalProperties: {
        type: "array",
        items: {
          type: "object",
          properties: {
            name: {
              type: "string",
              nullable: true,
            },
            value: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      nullable: true,
    },
    languageFilesMap: {
      type: "object",
      additionalProperties: {
        type: "array",
        items: {
          type: "object",
          properties: {
            name: {
              type: "string",
              nullable: true,
            },
            value: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationDto = {
  type: "object",
  properties: {
    resources: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          texts: {
            type: "object",
            additionalProperties: {
              type: "string",
            },
            nullable: true,
          },
          baseResources: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    currentCulture: {
      type: "object",
      properties: {
        displayName: {
          type: "string",
          nullable: true,
        },
        englishName: {
          type: "string",
          nullable: true,
        },
        threeLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        twoLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        isRightToLeft: {
          type: "boolean",
        },
        cultureName: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        nativeName: {
          type: "string",
          nullable: true,
        },
        dateTimeFormat: {
          type: "object",
          properties: {
            calendarAlgorithmType: {
              type: "string",
              nullable: true,
            },
            dateTimeFormatLong: {
              type: "string",
              nullable: true,
            },
            shortDatePattern: {
              type: "string",
              nullable: true,
            },
            fullDateTimePattern: {
              type: "string",
              nullable: true,
            },
            dateSeparator: {
              type: "string",
              nullable: true,
            },
            shortTimePattern: {
              type: "string",
              nullable: true,
            },
            longTimePattern: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDto = {
  type: "object",
  properties: {
    texts: {
      type: "object",
      additionalProperties: {
        type: "string",
      },
      nullable: true,
    },
    baseResources: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationSettingConfigurationDto = {
  type: "object",
  properties: {
    values: {
      type: "object",
      additionalProperties: {
        type: "string",
        nullable: true,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ClockDto = {
  type: "object",
  properties: {
    kind: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDto = {
  type: "object",
  properties: {
    displayName: {
      type: "string",
      nullable: true,
    },
    englishName: {
      type: "string",
      nullable: true,
    },
    threeLetterIsoLanguageName: {
      type: "string",
      nullable: true,
    },
    twoLetterIsoLanguageName: {
      type: "string",
      nullable: true,
    },
    isRightToLeft: {
      type: "boolean",
    },
    cultureName: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    nativeName: {
      type: "string",
      nullable: true,
    },
    dateTimeFormat: {
      type: "object",
      properties: {
        calendarAlgorithmType: {
          type: "string",
          nullable: true,
        },
        dateTimeFormatLong: {
          type: "string",
          nullable: true,
        },
        shortDatePattern: {
          type: "string",
          nullable: true,
        },
        fullDateTimePattern: {
          type: "string",
          nullable: true,
        },
        dateSeparator: {
          type: "string",
          nullable: true,
        },
        shortTimePattern: {
          type: "string",
          nullable: true,
        },
        longTimePattern: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentUserDto = {
  type: "object",
  properties: {
    isAuthenticated: {
      type: "boolean",
    },
    id: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    tenantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    impersonatorUserId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    impersonatorTenantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    impersonatorUserName: {
      type: "string",
      nullable: true,
    },
    impersonatorTenantName: {
      type: "string",
      nullable: true,
    },
    userName: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    surName: {
      type: "string",
      nullable: true,
    },
    email: {
      type: "string",
      nullable: true,
    },
    emailVerified: {
      type: "boolean",
    },
    phoneNumber: {
      type: "string",
      nullable: true,
    },
    phoneNumberVerified: {
      type: "boolean",
    },
    roles: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    sessionId: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_DateTimeFormatDto = {
  type: "object",
  properties: {
    calendarAlgorithmType: {
      type: "string",
      nullable: true,
    },
    dateTimeFormatLong: {
      type: "string",
      nullable: true,
    },
    shortDatePattern: {
      type: "string",
      nullable: true,
    },
    fullDateTimePattern: {
      type: "string",
      nullable: true,
    },
    dateSeparator: {
      type: "string",
      nullable: true,
    },
    shortTimePattern: {
      type: "string",
      nullable: true,
    },
    longTimePattern: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_IanaTimeZone = {
  type: "object",
  properties: {
    timeZoneName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_EntityExtensionDto = {
  type: "object",
  properties: {
    properties: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          displayName: {
            type: "object",
            properties: {
              name: {
                type: "string",
                nullable: true,
              },
              resource: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          api: {
            type: "object",
            properties: {
              onGet: {
                type: "object",
                properties: {
                  isAvailable: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onCreate: {
                type: "object",
                properties: {
                  isAvailable: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onUpdate: {
                type: "object",
                properties: {
                  isAvailable: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
            },
            additionalProperties: false,
          },
          ui: {
            type: "object",
            properties: {
              onTable: {
                type: "object",
                properties: {
                  isVisible: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onCreateForm: {
                type: "object",
                properties: {
                  isVisible: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onEditForm: {
                type: "object",
                properties: {
                  isVisible: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              lookup: {
                type: "object",
                properties: {
                  url: {
                    type: "string",
                    nullable: true,
                  },
                  resultListPropertyName: {
                    type: "string",
                    nullable: true,
                  },
                  displayPropertyName: {
                    type: "string",
                    nullable: true,
                  },
                  valuePropertyName: {
                    type: "string",
                    nullable: true,
                  },
                  filterParamName: {
                    type: "string",
                    nullable: true,
                  },
                },
                additionalProperties: false,
              },
            },
            additionalProperties: false,
          },
          attributes: {
            type: "array",
            items: {
              type: "object",
              properties: {
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                config: {
                  type: "object",
                  additionalProperties: {},
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          configuration: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
          defaultValue: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    configuration: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumDto = {
  type: "object",
  properties: {
    fields: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          value: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    localizationResource: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumFieldDto = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    value: {
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiCreateDto = {
  type: "object",
  properties: {
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiDto = {
  type: "object",
  properties: {
    onGet: {
      type: "object",
      properties: {
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onCreate: {
      type: "object",
      properties: {
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onUpdate: {
      type: "object",
      properties: {
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiGetDto = {
  type: "object",
  properties: {
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiUpdateDto = {
  type: "object",
  properties: {
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyAttributeDto = {
  type: "object",
  properties: {
    typeSimple: {
      type: "string",
      nullable: true,
    },
    config: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyDto = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    displayName: {
      type: "object",
      properties: {
        name: {
          type: "string",
          nullable: true,
        },
        resource: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    api: {
      type: "object",
      properties: {
        onGet: {
          type: "object",
          properties: {
            isAvailable: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onCreate: {
          type: "object",
          properties: {
            isAvailable: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onUpdate: {
          type: "object",
          properties: {
            isAvailable: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    ui: {
      type: "object",
      properties: {
        onTable: {
          type: "object",
          properties: {
            isVisible: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onCreateForm: {
          type: "object",
          properties: {
            isVisible: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onEditForm: {
          type: "object",
          properties: {
            isVisible: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        lookup: {
          type: "object",
          properties: {
            url: {
              type: "string",
              nullable: true,
            },
            resultListPropertyName: {
              type: "string",
              nullable: true,
            },
            displayPropertyName: {
              type: "string",
              nullable: true,
            },
            valuePropertyName: {
              type: "string",
              nullable: true,
            },
            filterParamName: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    attributes: {
      type: "array",
      items: {
        type: "object",
        properties: {
          typeSimple: {
            type: "string",
            nullable: true,
          },
          config: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    configuration: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
    defaultValue: {
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiDto = {
  type: "object",
  properties: {
    onTable: {
      type: "object",
      properties: {
        isVisible: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onCreateForm: {
      type: "object",
      properties: {
        isVisible: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onEditForm: {
      type: "object",
      properties: {
        isVisible: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    lookup: {
      type: "object",
      properties: {
        url: {
          type: "string",
          nullable: true,
        },
        resultListPropertyName: {
          type: "string",
          nullable: true,
        },
        displayPropertyName: {
          type: "string",
          nullable: true,
        },
        valuePropertyName: {
          type: "string",
          nullable: true,
        },
        filterParamName: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDto = {
  type: "object",
  properties: {
    isVisible: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiLookupDto = {
  type: "object",
  properties: {
    url: {
      type: "string",
      nullable: true,
    },
    resultListPropertyName: {
      type: "string",
      nullable: true,
    },
    displayPropertyName: {
      type: "string",
      nullable: true,
    },
    valuePropertyName: {
      type: "string",
      nullable: true,
    },
    filterParamName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiTableDto = {
  type: "object",
  properties: {
    isVisible: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_LocalizableStringDto = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    resource: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ModuleExtensionDto = {
  type: "object",
  properties: {
    entities: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          properties: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                displayName: {
                  type: "object",
                  properties: {
                    name: {
                      type: "string",
                      nullable: true,
                    },
                    resource: {
                      type: "string",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                api: {
                  type: "object",
                  properties: {
                    onGet: {
                      type: "object",
                      properties: {
                        isAvailable: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onCreate: {
                      type: "object",
                      properties: {
                        isAvailable: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onUpdate: {
                      type: "object",
                      properties: {
                        isAvailable: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                ui: {
                  type: "object",
                  properties: {
                    onTable: {
                      type: "object",
                      properties: {
                        isVisible: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onCreateForm: {
                      type: "object",
                      properties: {
                        isVisible: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onEditForm: {
                      type: "object",
                      properties: {
                        isVisible: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    lookup: {
                      type: "object",
                      properties: {
                        url: {
                          type: "string",
                          nullable: true,
                        },
                        resultListPropertyName: {
                          type: "string",
                          nullable: true,
                        },
                        displayPropertyName: {
                          type: "string",
                          nullable: true,
                        },
                        valuePropertyName: {
                          type: "string",
                          nullable: true,
                        },
                        filterParamName: {
                          type: "string",
                          nullable: true,
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                attributes: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      config: {
                        type: "object",
                        additionalProperties: {},
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                configuration: {
                  type: "object",
                  additionalProperties: {},
                  nullable: true,
                },
                defaultValue: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          configuration: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    configuration: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ObjectExtensionsDto = {
  type: "object",
  properties: {
    modules: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          entities: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                properties: {
                  type: "object",
                  additionalProperties: {
                    type: "object",
                    properties: {
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      displayName: {
                        type: "object",
                        properties: {
                          name: {
                            type: "string",
                            nullable: true,
                          },
                          resource: {
                            type: "string",
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                      api: {
                        type: "object",
                        properties: {
                          onGet: {
                            type: "object",
                            properties: {
                              isAvailable: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onCreate: {
                            type: "object",
                            properties: {
                              isAvailable: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onUpdate: {
                            type: "object",
                            properties: {
                              isAvailable: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                        },
                        additionalProperties: false,
                      },
                      ui: {
                        type: "object",
                        properties: {
                          onTable: {
                            type: "object",
                            properties: {
                              isVisible: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onCreateForm: {
                            type: "object",
                            properties: {
                              isVisible: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onEditForm: {
                            type: "object",
                            properties: {
                              isVisible: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          lookup: {
                            type: "object",
                            properties: {
                              url: {
                                type: "string",
                                nullable: true,
                              },
                              resultListPropertyName: {
                                type: "string",
                                nullable: true,
                              },
                              displayPropertyName: {
                                type: "string",
                                nullable: true,
                              },
                              valuePropertyName: {
                                type: "string",
                                nullable: true,
                              },
                              filterParamName: {
                                type: "string",
                                nullable: true,
                              },
                            },
                            additionalProperties: false,
                          },
                        },
                        additionalProperties: false,
                      },
                      attributes: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            config: {
                              type: "object",
                              additionalProperties: {},
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      configuration: {
                        type: "object",
                        additionalProperties: {},
                        nullable: true,
                      },
                      defaultValue: {
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                configuration: {
                  type: "object",
                  additionalProperties: {},
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          configuration: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    enums: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          fields: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                value: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          localizationResource: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimeZone = {
  type: "object",
  properties: {
    iana: {
      type: "object",
      properties: {
        timeZoneName: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    windows: {
      type: "object",
      properties: {
        timeZoneId: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimingDto = {
  type: "object",
  properties: {
    timeZone: {
      type: "object",
      properties: {
        iana: {
          type: "object",
          properties: {
            timeZoneName: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        windows: {
          type: "object",
          properties: {
            timeZoneId: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_WindowsTimeZone = {
  type: "object",
  properties: {
    timeZoneId: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_MultiTenancy_CurrentTenantDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_MultiTenancy_MultiTenancyInfoDto = {
  type: "object",
  properties: {
    isEnabled: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ActionApiDescriptionModel = {
  type: "object",
  properties: {
    uniqueName: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    httpMethod: {
      type: "string",
      nullable: true,
    },
    url: {
      type: "string",
      nullable: true,
    },
    supportedVersions: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    parametersOnMethod: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          typeAsString: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isOptional: {
            type: "boolean",
          },
          defaultValue: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    parameters: {
      type: "array",
      items: {
        type: "object",
        properties: {
          nameOnMethod: {
            type: "string",
            nullable: true,
          },
          name: {
            type: "string",
            nullable: true,
          },
          jsonName: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isOptional: {
            type: "boolean",
          },
          defaultValue: {
            nullable: true,
          },
          constraintTypes: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          bindingSourceId: {
            type: "string",
            nullable: true,
          },
          descriptorName: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    returnValue: {
      type: "object",
      properties: {
        type: {
          type: "string",
          nullable: true,
        },
        typeSimple: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    allowAnonymous: {
      type: "boolean",
      nullable: true,
    },
    implementFrom: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ApplicationApiDescriptionModel = {
  type: "object",
  properties: {
    modules: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          rootPath: {
            type: "string",
            nullable: true,
          },
          remoteServiceName: {
            type: "string",
            nullable: true,
          },
          controllers: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                controllerName: {
                  type: "string",
                  nullable: true,
                },
                controllerGroupName: {
                  type: "string",
                  nullable: true,
                },
                isRemoteService: {
                  type: "boolean",
                },
                isIntegrationService: {
                  type: "boolean",
                },
                apiVersion: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                interfaces: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      methods: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            parametersOnMethod: {
                              type: "array",
                              items: {
                                type: "object",
                                properties: {
                                  name: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  typeAsString: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  type: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  typeSimple: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  isOptional: {
                                    type: "boolean",
                                  },
                                  defaultValue: {
                                    nullable: true,
                                  },
                                },
                                additionalProperties: false,
                              },
                              nullable: true,
                            },
                            returnValue: {
                              type: "object",
                              properties: {
                                type: {
                                  type: "string",
                                  nullable: true,
                                },
                                typeSimple: {
                                  type: "string",
                                  nullable: true,
                                },
                              },
                              additionalProperties: false,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                actions: {
                  type: "object",
                  additionalProperties: {
                    type: "object",
                    properties: {
                      uniqueName: {
                        type: "string",
                        nullable: true,
                      },
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      httpMethod: {
                        type: "string",
                        nullable: true,
                      },
                      url: {
                        type: "string",
                        nullable: true,
                      },
                      supportedVersions: {
                        type: "array",
                        items: {
                          type: "string",
                        },
                        nullable: true,
                      },
                      parametersOnMethod: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            typeAsString: {
                              type: "string",
                              nullable: true,
                            },
                            type: {
                              type: "string",
                              nullable: true,
                            },
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            isOptional: {
                              type: "boolean",
                            },
                            defaultValue: {
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      parameters: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            nameOnMethod: {
                              type: "string",
                              nullable: true,
                            },
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            jsonName: {
                              type: "string",
                              nullable: true,
                            },
                            type: {
                              type: "string",
                              nullable: true,
                            },
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            isOptional: {
                              type: "boolean",
                            },
                            defaultValue: {
                              nullable: true,
                            },
                            constraintTypes: {
                              type: "array",
                              items: {
                                type: "string",
                              },
                              nullable: true,
                            },
                            bindingSourceId: {
                              type: "string",
                              nullable: true,
                            },
                            descriptorName: {
                              type: "string",
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      returnValue: {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            nullable: true,
                          },
                          typeSimple: {
                            type: "string",
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                      allowAnonymous: {
                        type: "boolean",
                        nullable: true,
                      },
                      implementFrom: {
                        type: "string",
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    types: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          baseType: {
            type: "string",
            nullable: true,
          },
          isEnum: {
            type: "boolean",
          },
          enumNames: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          enumValues: {
            type: "array",
            items: {},
            nullable: true,
          },
          genericArguments: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          properties: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                jsonName: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isRequired: {
                  type: "boolean",
                },
                minLength: {
                  type: "integer",
                  format: "int32",
                  nullable: true,
                },
                maxLength: {
                  type: "integer",
                  format: "int32",
                  nullable: true,
                },
                minimum: {
                  type: "string",
                  nullable: true,
                },
                maximum: {
                  type: "string",
                  nullable: true,
                },
                regex: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ControllerApiDescriptionModel = {
  type: "object",
  properties: {
    controllerName: {
      type: "string",
      nullable: true,
    },
    controllerGroupName: {
      type: "string",
      nullable: true,
    },
    isRemoteService: {
      type: "boolean",
    },
    isIntegrationService: {
      type: "boolean",
    },
    apiVersion: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    interfaces: {
      type: "array",
      items: {
        type: "object",
        properties: {
          type: {
            type: "string",
            nullable: true,
          },
          name: {
            type: "string",
            nullable: true,
          },
          methods: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                parametersOnMethod: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      typeAsString: {
                        type: "string",
                        nullable: true,
                      },
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      isOptional: {
                        type: "boolean",
                      },
                      defaultValue: {
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                returnValue: {
                  type: "object",
                  properties: {
                    type: {
                      type: "string",
                      nullable: true,
                    },
                    typeSimple: {
                      type: "string",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    actions: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          uniqueName: {
            type: "string",
            nullable: true,
          },
          name: {
            type: "string",
            nullable: true,
          },
          httpMethod: {
            type: "string",
            nullable: true,
          },
          url: {
            type: "string",
            nullable: true,
          },
          supportedVersions: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          parametersOnMethod: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                typeAsString: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isOptional: {
                  type: "boolean",
                },
                defaultValue: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          parameters: {
            type: "array",
            items: {
              type: "object",
              properties: {
                nameOnMethod: {
                  type: "string",
                  nullable: true,
                },
                name: {
                  type: "string",
                  nullable: true,
                },
                jsonName: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isOptional: {
                  type: "boolean",
                },
                defaultValue: {
                  nullable: true,
                },
                constraintTypes: {
                  type: "array",
                  items: {
                    type: "string",
                  },
                  nullable: true,
                },
                bindingSourceId: {
                  type: "string",
                  nullable: true,
                },
                descriptorName: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          returnValue: {
            type: "object",
            properties: {
              type: {
                type: "string",
                nullable: true,
              },
              typeSimple: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          allowAnonymous: {
            type: "boolean",
            nullable: true,
          },
          implementFrom: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ControllerInterfaceApiDescriptionModel = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    methods: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          parametersOnMethod: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                typeAsString: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isOptional: {
                  type: "boolean",
                },
                defaultValue: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          returnValue: {
            type: "object",
            properties: {
              type: {
                type: "string",
                nullable: true,
              },
              typeSimple: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_InterfaceMethodApiDescriptionModel = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    parametersOnMethod: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          typeAsString: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isOptional: {
            type: "boolean",
          },
          defaultValue: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    returnValue: {
      type: "object",
      properties: {
        type: {
          type: "string",
          nullable: true,
        },
        typeSimple: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModel = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    typeAsString: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    isOptional: {
      type: "boolean",
    },
    defaultValue: {
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ModuleApiDescriptionModel = {
  type: "object",
  properties: {
    rootPath: {
      type: "string",
      nullable: true,
    },
    remoteServiceName: {
      type: "string",
      nullable: true,
    },
    controllers: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          controllerName: {
            type: "string",
            nullable: true,
          },
          controllerGroupName: {
            type: "string",
            nullable: true,
          },
          isRemoteService: {
            type: "boolean",
          },
          isIntegrationService: {
            type: "boolean",
          },
          apiVersion: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          interfaces: {
            type: "array",
            items: {
              type: "object",
              properties: {
                type: {
                  type: "string",
                  nullable: true,
                },
                name: {
                  type: "string",
                  nullable: true,
                },
                methods: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      parametersOnMethod: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            typeAsString: {
                              type: "string",
                              nullable: true,
                            },
                            type: {
                              type: "string",
                              nullable: true,
                            },
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            isOptional: {
                              type: "boolean",
                            },
                            defaultValue: {
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      returnValue: {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            nullable: true,
                          },
                          typeSimple: {
                            type: "string",
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          actions: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                uniqueName: {
                  type: "string",
                  nullable: true,
                },
                name: {
                  type: "string",
                  nullable: true,
                },
                httpMethod: {
                  type: "string",
                  nullable: true,
                },
                url: {
                  type: "string",
                  nullable: true,
                },
                supportedVersions: {
                  type: "array",
                  items: {
                    type: "string",
                  },
                  nullable: true,
                },
                parametersOnMethod: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      typeAsString: {
                        type: "string",
                        nullable: true,
                      },
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      isOptional: {
                        type: "boolean",
                      },
                      defaultValue: {
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                parameters: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      nameOnMethod: {
                        type: "string",
                        nullable: true,
                      },
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      jsonName: {
                        type: "string",
                        nullable: true,
                      },
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      isOptional: {
                        type: "boolean",
                      },
                      defaultValue: {
                        nullable: true,
                      },
                      constraintTypes: {
                        type: "array",
                        items: {
                          type: "string",
                        },
                        nullable: true,
                      },
                      bindingSourceId: {
                        type: "string",
                        nullable: true,
                      },
                      descriptorName: {
                        type: "string",
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                returnValue: {
                  type: "object",
                  properties: {
                    type: {
                      type: "string",
                      nullable: true,
                    },
                    typeSimple: {
                      type: "string",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                allowAnonymous: {
                  type: "boolean",
                  nullable: true,
                },
                implementFrom: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ParameterApiDescriptionModel = {
  type: "object",
  properties: {
    nameOnMethod: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    jsonName: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    isOptional: {
      type: "boolean",
    },
    defaultValue: {
      nullable: true,
    },
    constraintTypes: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    bindingSourceId: {
      type: "string",
      nullable: true,
    },
    descriptorName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_PropertyApiDescriptionModel = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    jsonName: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    isRequired: {
      type: "boolean",
    },
    minLength: {
      type: "integer",
      format: "int32",
      nullable: true,
    },
    maxLength: {
      type: "integer",
      format: "int32",
      nullable: true,
    },
    minimum: {
      type: "string",
      nullable: true,
    },
    maximum: {
      type: "string",
      nullable: true,
    },
    regex: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModel = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_TypeApiDescriptionModel = {
  type: "object",
  properties: {
    baseType: {
      type: "string",
      nullable: true,
    },
    isEnum: {
      type: "boolean",
    },
    enumNames: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    enumValues: {
      type: "array",
      items: {},
      nullable: true,
    },
    genericArguments: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    properties: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          jsonName: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isRequired: {
            type: "boolean",
          },
          minLength: {
            type: "integer",
            format: "int32",
            nullable: true,
          },
          maxLength: {
            type: "integer",
            format: "int32",
            nullable: true,
          },
          minimum: {
            type: "string",
            nullable: true,
          },
          maximum: {
            type: "string",
            nullable: true,
          },
          regex: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_RemoteServiceErrorInfo = {
  type: "object",
  properties: {
    code: {
      type: "string",
      nullable: true,
    },
    message: {
      type: "string",
      nullable: true,
    },
    details: {
      type: "string",
      nullable: true,
    },
    data: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
    validationErrors: {
      type: "array",
      items: {
        type: "object",
        properties: {
          message: {
            type: "string",
            nullable: true,
          },
          members: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_RemoteServiceErrorResponse = {
  type: "object",
  properties: {
    error: {
      type: "object",
      properties: {
        code: {
          type: "string",
          nullable: true,
        },
        message: {
          type: "string",
          nullable: true,
        },
        details: {
          type: "string",
          nullable: true,
        },
        data: {
          type: "object",
          additionalProperties: {},
          nullable: true,
        },
        validationErrors: {
          type: "array",
          items: {
            type: "object",
            properties: {
              message: {
                type: "string",
                nullable: true,
              },
              members: {
                type: "array",
                items: {
                  type: "string",
                },
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_RemoteServiceValidationErrorInfo = {
  type: "object",
  properties: {
    message: {
      type: "string",
      nullable: true,
    },
    members: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Localization_LanguageInfo = {
  type: "object",
  properties: {
    cultureName: {
      type: "string",
      nullable: true,
    },
    uiCultureName: {
      type: "string",
      nullable: true,
    },
    displayName: {
      type: "string",
      nullable: true,
    },
    twoLetterISOLanguageName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_NameValue = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    value: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;
