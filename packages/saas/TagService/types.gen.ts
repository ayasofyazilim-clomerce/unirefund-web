// This file is auto-generated by @hey-api/openapi-ts

export type PagedResultDto_TagListItemDto = {
  items?: Array<UniRefund_TagService_Tags_TagListItemDto> | null;
  totalCount?: number;
};

export type TagListResponseDto_TagListItemDto = {
  items?: Array<UniRefund_TagService_Tags_TagListItemDto> | null;
  totalCount?: number;
};

export type UniRefund_ExportValidationService_ExportValidations_ExportValidationDetailDto = {
  id?: string;
  tagId?: string | null;
  tagNumber?: string | null;
  customsId: string;
  customsName: string;
  referenceId?: string | null;
  exportDate: string;
  status?: UniRefund_ExportValidationService_ExportValidations_ExportValidationStatusCode;
  stampType?: UniRefund_ExportValidationService_ExportValidations_StampTypeCode;
  initialValidationResult?: UniRefund_ExportValidationService_ExportValidations_ValidationResult;
  finalValidationResult?: UniRefund_ExportValidationService_ExportValidations_ValidationResult;
};

export type UniRefund_ExportValidationService_ExportValidations_ExportValidationDto = {
  id?: string;
  tagId?: string | null;
  tagNumber?: string | null;
  customsId: string;
  customsName: string;
  exportDate: string;
  referenceId?: string | null;
  status?: UniRefund_ExportValidationService_ExportValidations_ExportValidationStatusCode;
  stampType?: UniRefund_ExportValidationService_ExportValidations_StampTypeCode;
  initialValidationResult?: UniRefund_ExportValidationService_ExportValidations_ValidationResult;
  finalValidationResult?: UniRefund_ExportValidationService_ExportValidations_ValidationResult;
};

export type UniRefund_ExportValidationService_ExportValidations_ExportValidationStatusCode =
  | "None"
  | "Waiting"
  | "Approved"
  | "Rejected"
  | "Expired";

export type UniRefund_ExportValidationService_ExportValidations_StampTypeCode = "None" | "Integration" | "DigitalStamp";

export type UniRefund_ExportValidationService_ExportValidations_ValidationResult = "None" | "Green";

export type UniRefund_SettingService_ProductGroups_CompanyTypeCode =
  | "GOVERNMENT"
  | "TAXFREE"
  | "CUSTOMS"
  | "REFUNDPOINT"
  | "MERCHANT"
  | "EXCHANGE"
  | "TOURGUIDE";

export type UniRefund_SettingService_ProductGroups_ProductGroupDto = {
  id?: string;
  articleCode: string;
  name: string;
  unitCode: UniRefund_SettingService_ProductGroups_UnitTypeCode;
  companyType: UniRefund_SettingService_ProductGroups_CompanyTypeCode;
  vatId?: string;
  vatPercent?: number | null;
  active: boolean;
  food: boolean;
};

export type UniRefund_SettingService_ProductGroups_UnitTypeCode = "QNT" | "BAG" | "BOX";

/**
 * Represents an invoice within the tax-free system.
 * This DTO captures key financial details of a purchase eligible for tax refunds.
 */
export type UniRefund_TagService_Invoices_InvoiceDto = {
  id?: string;
  /**
   * The unique identifying number of the invoice.
   */
  number?: string | null;
  /**
   * The date when the invoice was issued. This field is **required**.
   */
  issueDate: string;
  /**
   * The total monetary amount of the invoice, including VAT. This field is **required**.
   */
  totalAmount: number;
  /**
   * The Value Added Tax (VAT) amount included in the invoice. This field is **required**.
   */
  vatAmount: number;
  /**
   * The currency in which the invoice amounts are denominated (e.g., "EUR", "USD").
   */
  currency?: string | null;
  /**
   * A collection of individual line items included in this invoice.
   */
  invoiceLines?: Array<UniRefund_TagService_Invoices_InvoiceLineDto> | null;
};

/**
 * Represents a single line item within an invoice.
 * This DTO details a specific product or service and its associated financial breakdown.
 */
export type UniRefund_TagService_Invoices_InvoiceLineDto = {
  id?: string;
  productGroup?: UniRefund_SettingService_ProductGroups_ProductGroupDto;
  /**
   * A description of the item in this invoice line (e.g., "Men's Leather Jacket," "Designer Watch").
   */
  description?: string | null;
  /**
   * The total monetary amount for this specific line item, including tax. This field is **required**.
   */
  amount: number;
  /**
   * The tax rate applied to this line item, expressed as a decimal (e.g., 0.18 for 18%). This field is **required**.
   */
  taxRate: number;
  /**
   * The calculated tax amount for this line item. This field is **required**.
   */
  taxAmount: number;
  /**
   * The base amount before tax for this line item. This field is **required**.
   */
  taxBase: number;
  /**
   * The currency in which this line item's amounts are denominated.
   */
  currency?: string | null;
};

/**
 * Represents the data required to create or update an invoice.
 */
export type UniRefund_TagService_Invoices_InvoiceRequestDto = {
  /**
   * The unique identifier of the invoice (optional for creation).
   */
  id?: string | null;
  /**
   * The globally unique identifier (UUID) of the invoice.
   * Required for invoice tracking and referencing.
   */
  uuid: string;
  /**
   * The invoice number as issued by the merchant or system.
   * Optional field for external reference.
   */
  invoiceNumber?: string | null;
  /**
   * The date when the invoice was issued.
   * Required for financial and legal records.
   */
  issueDate: string;
  /**
   * The total gross amount of the invoice, including VAT.
   * Required for payment and tax calculations.
   */
  totalAmount: number;
  /**
   * The total VAT (Value Added Tax) amount included in the invoice.
   * Required for tax reporting.
   */
  vatAmount: number;
  /**
   * The list of individual invoice line items detailing the products or services provided.
   * Required for itemized billing and calculations.
   */
  invoiceLines: Array<UniRefund_TagService_Tags_InvoiceLineRequestDto>;
};

/**
 * Represents the detailed business information for a merchant within the tax-free system.
 * This DTO is used for transferring and displaying core merchant data.
 */
export type UniRefund_TagService_Merchants_MerchantDetailDto = {
  id?: string;
  /**
   * The **business name** of the merchant. This is the official trading name.
   */
  name?: string | null;
  address?: UniRefund_TagService_Tags_AddressDto;
  /**
   * A list of **product groups** that this merchant sells,
   * relevant for tax-free eligibility categorization.
   */
  productGroups?: Array<UniRefund_TagService_Tags_ProductGroupDto> | null;
};

/**
 * Data transfer object for merchant registration or update requests.
 */
export type UniRefund_TagService_Merchants_MerchantRequestDto = {
  /**
   * The merchant's official VAT (Value Added Tax) number as registered in the relevant country.
   * This number is used for tax reporting and legal identification of the business.
   */
  vatNumber: string;
  /**
   * ISO 3166-1 alpha-2 country code where the merchant is registered (e.g., "DE" for Germany, "TR" for Turkey).
   * Determines jurisdiction for tax and regulatory purposes.
   */
  countryCode: string;
  /**
   * Unique identifier of the merchant's branch or store within the organization.
   * Used to distinguish between different locations or subdivisions of the same merchant.
   */
  branchId: string;
};

/**
 * Represents the address information for entities within the tax-free system.
 * This DTO provides a consolidated view of an address.
 */
export type UniRefund_TagService_Tags_AddressDto = {
  id?: string;
  /**
   * The complete, formatted text of the address (e.g., street, building number, city, postcode, country).
   */
  fullText?: string | null;
};

export type UniRefund_TagService_Tags_CreateTagRequestDto = {
  merchant: UniRefund_TagService_Merchants_MerchantRequestDto;
  traveller: UniRefund_TagService_Travellers_TravellerRequestDto;
  /**
   * A collection of invoices linked to this tag.
   */
  invoices: Array<UniRefund_TagService_Invoices_InvoiceRequestDto>;
};

export type UniRefund_TagService_Tags_EarningType =
  | "None"
  | "GrossComission"
  | "RedefinedGC"
  | "Rebate"
  | "NetComission";

export type UniRefund_TagService_Tags_Enums_RefundType =
  | "Cash"
  | "CreditCard"
  | "BankTransfer"
  | "Wallet"
  | "CashViaPartner"
  | "IbanTransfer";

export type UniRefund_TagService_Tags_ExpirationReason =
  | "ExportValidationExpirationDate"
  | "RefundExpirationDate"
  | "EarlyRefundExpirationDate";

export type UniRefund_TagService_Tags_ExportValidationRequestDto = {
  exportDate?: string | null;
  customsId: string;
  referenceId: string;
  responseCode: string;
  description?: string | null;
};

export type UniRefund_TagService_Tags_InvoiceLineRequestDto = {
  taxRate: number;
  taxAmount: number;
  amount: number;
  taxBase: number;
  productGroupId?: string | null;
};

/**
 * Represents a category or group of products.
 */
export type UniRefund_TagService_Tags_ProductGroupDto = {
  id?: string;
  /**
   * A description of the product group (e.g., "Electronics," "Apparel," "Luxury Goods").
   */
  description?: string | null;
};

export type UniRefund_TagService_Tags_RebateStatementByVATStatementDto = {
  vatStatementHeaderId?: string;
  rebateStatementPropertiesByMerchantIds?: Array<UniRefund_TagService_Tags_RebateStatementPropertiesByMerchantIdsDto> | null;
};

export type UniRefund_TagService_Tags_RebateStatementPropertiesByMerchantIdsDto = {
  merchantId?: string;
  tagCount?: number;
  rebateAmount?: number;
  grandTotalAmount?: number;
  vatAmount?: number;
};

export type UniRefund_TagService_Tags_SetTagRefundRequestDto = {
  tagRefunds?: Array<UniRefund_TagService_Tags_SetTagRefundRequestItemDto> | null;
  refundId?: string;
  refundType?: UniRefund_TagService_Tags_Enums_RefundType;
  refundDate?: string;
  status?: UniRefund_TagService_Tags_TagStatusType;
  refundPointId?: string;
};

export type UniRefund_TagService_Tags_SetTagRefundRequestItemDto = {
  id?: string;
  refundAmount?: number;
  refundCurrency?: string | null;
  refundRate?: number;
  travellerFeeAmount?: number;
  agentFeeAmount?: number;
  earlyRefundFeeAmount?: number | null;
};

export type UniRefund_TagService_Tags_SetTagRefundResponseDto = {
  earlyRefundExpiryDate?: string | null;
};

export type UniRefund_TagService_Tags_SetTagVATStatementHeaderIdRequestDto = {
  tagIdAndVATStatementHeaderIdPairs?: Array<UniRefund_TagService_Tags_TagIdAndVATStatementHeaderIdPairDto> | null;
};

/**
 * Represents detailed information about a specific tag in the system.
 */
export type UniRefund_TagService_Tags_TagDetailDto = {
  id?: string;
  /**
   * Unique identifier number of the tag.
   */
  tagNumber: string;
  status: UniRefund_TagService_Tags_TagStatusType;
  expirationReason?: UniRefund_TagService_Tags_ExpirationReason;
  refundType?: UniRefund_TagService_Tags_Enums_RefundType;
  /**
   * Indicates if the tag was refunded earlier than usual.
   */
  isEarlyRefunded?: boolean | null;
  /**
   * The date when the tag was initially issued.
   */
  issueDate: string;
  /**
   * The expiration date for export validation associated with the tag.
   */
  exportValidationExpirationDate: string;
  /**
   * The expiration date by which a refund can be claimed, if applicable.
   */
  refundExpirationDate?: string | null;
  merchant?: UniRefund_TagService_Merchants_MerchantDetailDto;
  traveller?: UniRefund_TagService_Travellers_TravellerDetailDto;
  exportValidation?: UniRefund_ExportValidationService_ExportValidations_ExportValidationDetailDto;
  /**
   * The identifier of the refund associated with this tag, if available.
   */
  refundId?: string | null;
  /**
   * The identifier for the VAT statement header associated with this tag, if applicable.
   */
  vatStatementHeaderId?: string | null;
  /**
   * A collection of invoices linked to this tag.
   */
  invoices?: Array<UniRefund_TagService_Invoices_InvoiceDto> | null;
  /**
   * Aggregated totals calculated for this tag.
   */
  totals?: Array<UniRefund_TagService_Tags_TagTotalDto> | null;
  /**
   * Earnings or revenues associated with this tag.
   */
  earnings?: Array<UniRefund_TagService_Tags_TagEarningDto> | null;
};

/**
 * Represents a tax-free shopping tag with all business-relevant details, used for tracking transactions, refunds, and related records.
 */
export type UniRefund_TagService_Tags_TagDto = {
  id?: string;
  /**
   * The unique tag number assigned to a tax-free transaction.
   * Used as the primary reference for tag operations.
   */
  tagNumber: string;
  status: UniRefund_TagService_Tags_TagStatusType;
  expirationReason?: UniRefund_TagService_Tags_ExpirationReason;
  refundType?: UniRefund_TagService_Tags_Enums_RefundType;
  /**
   * Indicates whether the tag has been refunded before the standard period (early refund scenario).
   */
  isEarlyRefunded?: boolean | null;
  /**
   * The date and time when the tag was created or issued.
   * Required for all legal and reporting activities.
   */
  issueDate: string;
  /**
   * The deadline for completing export validation for this tag.
   * Marks the last date the export operation must be confirmed.
   */
  exportValidationExpirationDate: string;
  /**
   * The expiration date for refund eligibility for this tag, if set.
   * After this date, the tag cannot be refunded.
   */
  refundExpirationDate?: string | null;
  /**
   * The unique identifier linking this tag to its related export validation record.
   * Used for auditing and tracing export validation operations.
   */
  exportValidationId?: string | null;
  /**
   * The unique identifier of the refund transaction associated with this tag, if refunded.
   * Used to connect refund records for reconciliation and tracking.
   */
  refundId?: string | null;
  /**
   * The unique identifier of the VAT statement header associated with this tag, if applicable.
   * Used for VAT reporting and compliance.
   */
  vatStatementHeaderId?: string | null;
  /**
   * The unique identifier of the merchant associated with this tag.
   * Used to link the transaction to a specific merchant entity in the system.
   */
  merchantId?: string | null;
  /**
   * The unique identifier of the traveller (customer) associated with this tag.
   * Used to connect the tag with the traveller's records for eligibility and history checks.
   */
  travellerId?: string | null;
  /**
   * The travel document number (such as passport number) of the traveller.
   * Used for customs checks and traveller identification.
   */
  travelDocumentNumber?: string | null;
  /**
   * The unique identifier of the trip related to this tag, if assigned.
   * Used for grouping transactions under a single travel itinerary.
   */
  tripId?: string | null;
  /**
   * The unique identifier of the refund calculation table associated with this tag, if used.
   */
  refundTableId?: string | null;
  /**
   * The unique identifier of the rebate calculation table associated with this tag, if used.
   */
  rebateTableId?: string | null;
  /**
   * The unique identifier of the contract header table associated with this tag
   */
  contractHeaderId?: string | null;
  totals?: Array<UniRefund_TagService_Tags_TagTotalDto> | null;
};

/**
 * Represents an earning associated with a tax-free tag.
 * This DTO captures different types of monetary amounts that represent earnings or commissions related to a tax-free transaction.
 */
export type UniRefund_TagService_Tags_TagEarningDto = {
  earningType: UniRefund_TagService_Tags_EarningType;
  /**
   * The monetary value of this earning. This is **required**.
   */
  amount: number;
  /**
   * An optional description providing more context for this earning.
   */
  description?: string | null;
  /**
   * The three-letter ISO currency code (e.g., "EUR" for Euro, "USD" for US Dollar) for this earning. This is **required**.
   */
  currency: string;
  /**
   * The currency exchange rate applicable to this earning, especially if converted from another currency. This is **required**.
   */
  currencyRate: number;
};

export type UniRefund_TagService_Tags_TagIdAndVATStatementHeaderIdPairDto = {
  tagId: string;
  vatStatementHeaderId: string;
};

export type UniRefund_TagService_Tags_TagListItemDto = {
  id?: string;
  tagNumber: string;
  issueDate: string;
  exportValidationExpirationDate: string;
  refundExpirationDate?: string | null;
  isEarlyRefunded?: boolean | null;
  travellerFullName: string;
  travellerDocumentNumber: string;
  merchantTitle: string;
  status: UniRefund_TagService_Tags_TagStatusType;
  expirationReason?: UniRefund_TagService_Tags_ExpirationReason;
  totals?: Array<UniRefund_TagService_Tags_TagTotalDto> | null;
};

export type UniRefund_TagService_Tags_TagListSummaryDto = {
  totalSalesAmount: number;
  totalRefundAmount: number;
  currency: string;
};

export type UniRefund_TagService_Tags_TagRefundFeesDto = {
  id: string;
  touristFee: number;
  agentFee: number;
  earlyRefundFee: number;
  netRefundAmount: number;
};

/**
 * Data Transfer Object (DTO) for the response of summing tags.
 */
export type UniRefund_TagService_Tags_TagsSumForRefundResponseDto = {
  /**
   * Gets or sets the list of refund fees associated with the tags.
   */
  tagRefundFees?: Array<UniRefund_TagService_Tags_TagRefundFeesDto> | null;
  /**
   * Gets or sets the unique identifier of the traveller.
   */
  travellerId?: string;
  /**
   * Gets or sets the document number of the traveller.
   */
  travellerDocumentNumber?: string | null;
  /**
   * Gets or sets the currency in which the refund is processed.
   */
  refundCurrency?: string | null;
  status?: UniRefund_TagService_Tags_TagStatusType;
};

export type UniRefund_TagService_Tags_TagStatusType =
  | "None"
  | "Open"
  | "PreIssued"
  | "Issued"
  | "WaitingGoodsValidation"
  | "WaitingStampValidation"
  | "Declined"
  | "ExportValidated"
  | "PaymentBlocked"
  | "PaymentInProgress"
  | "PaymentProblem"
  | "Paid"
  | "Cancelled"
  | "Expired"
  | "Correction"
  | "OptedOut"
  | "EarlyPaid";

export type UniRefund_TagService_Tags_TagSumTagsForVATStatementTagDetailResponseDto = {
  tagId: string;
  merchantId: string;
  tagNumber: string;
  refundDate: string;
  grandTotal: number;
  taxAmount: number;
  refundAmount: number;
  currency: string;
};

/**
 * Represents a financial total associated with a tax-free tag.
 * This DTO captures different types of monetary amounts relevant to the tag, such as refund totals or purchase totals.
 */
export type UniRefund_TagService_Tags_TagTotalDto = {
  totalType: UniRefund_TagService_Tags_TotalType;
  /**
   * The monetary value of this total. This is **required**.
   */
  amount: number;
  /**
   * An optional description providing more context for this total.
   */
  description?: string | null;
  /**
   * The three-letter ISO currency code (e.g., "EUR" for Euro, "USD" for US Dollar) for this total. This is **required**.
   */
  currency: string;
  /**
   * The currency exchange rate applicable to this total, especially if converted from another currency. This is **required**.
   */
  currencyRate: number;
};

export type UniRefund_TagService_Tags_TagValidForVATStatementResponseDto = {
  tagId: string;
  merchantId: string;
  contractHeaderId: string;
  tagNumber: string;
  invoiceId?: string | null;
  taxRate?: number | null;
  taxBase: number;
  taxAmount: number;
  grandTotal: number;
  refundDate: string;
  refundAmount: number;
  currency: string;
  tenantId?: string | null;
};

export type UniRefund_TagService_Tags_TotalType =
  | "None"
  | "SalesAmount"
  | "VatAmount"
  | "GrossRefund"
  | "RefundFee"
  | "AgentRefundFee"
  | "Refund"
  | "EarlyRefundFee";

export type UniRefund_TagService_Tags_UpdateTagDto = {
  tagNumber?: string | null;
  refundType?: UniRefund_TagService_Tags_Enums_RefundType;
  issueDate?: string;
  exportValidationExpirationDate?: string | null;
  refundExpirationDate?: string | null;
  exportValidationId?: string | null;
  refundId?: string | null;
  vatStatementHeaderId?: string | null;
  merchantId?: string | null;
  travellerId?: string | null;
  tripId?: string | null;
  refundTableId?: string | null;
  rebateTableId?: string | null;
  contractHeaderId?: string | null;
  totals?: Array<UniRefund_TagService_Tags_TagTotalDto> | null;
};

/**
 * Represents the personal and travel document details of a traveller.
 * This DTO is used to capture essential information about the individual making a tax-free purchase.
 */
export type UniRefund_TagService_Travellers_TravellerDetailDto = {
  id?: string;
  /**
   * The unique identification number from the traveller's travel document (e.g., passport number).
   */
  travelDocumentNumber?: string | null;
  /**
   * The country where the traveller permanently resides.
   */
  countryOfResidence?: string | null;
  /**
   * The nationality of the traveller as indicated on their travel document.
   */
  nationality?: string | null;
  /**
   * The first name(s) of the traveller.
   */
  firstname?: string | null;
  /**
   * The last name(s) or surname of the traveller.
   */
  lastname?: string | null;
};

export type UniRefund_TagService_Travellers_TravellerRequestDto = {
  /**
   * The unique identifier of the traveller (optional for creation).
   */
  id?: string | null;
  /**
   * The travel document number (such as passport number) of the traveller.
   * Required for identification and document verification.
   */
  travelDocumentNumber: string;
  /**
   * The ISO 3166-1 alpha-2 country code representing the traveller's nationality (e.g., "TR" for Turkey).
   */
  nationalityCountryCode2: string;
  /**
   * The first name or given name of the traveller.
   */
  firstName: string;
  /**
   * The last name or surname of the traveller.
   */
  lastName: string;
  /**
   * The ISO 3166-1 alpha-2 country code representing the traveller's country of residence.
   */
  residenceCountryCode2: string;
  /**
   * The expiration date of the travel document (optional).
   */
  expirationDate?: string | null;
  /**
   * The birth date of the traveller (optional).
   */
  birthDate?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationAuthConfigurationDto = {
  grantedPolicies?: {
    [key: string]: boolean;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationConfigurationDto = {
  localization?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationConfigurationDto;
  auth?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationAuthConfigurationDto;
  setting?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationSettingConfigurationDto;
  currentUser?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentUserDto;
  features?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationFeatureConfigurationDto;
  globalFeatures?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationGlobalFeatureConfigurationDto;
  multiTenancy?: Volo_Abp_AspNetCore_Mvc_MultiTenancy_MultiTenancyInfoDto;
  currentTenant?: Volo_Abp_AspNetCore_Mvc_MultiTenancy_CurrentTenantDto;
  timing?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimingDto;
  clock?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ClockDto;
  objectExtensions?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ObjectExtensionsDto;
  extraProperties?: {
    [key: string]: unknown;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationFeatureConfigurationDto = {
  values?: {
    [key: string]: string | null;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationGlobalFeatureConfigurationDto = {
  enabledFeatures?: Array<string> | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationConfigurationDto = {
  values?: {
    [key: string]: {
      [key: string]: string;
    };
  } | null;
  resources?: {
    [key: string]: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDto;
  } | null;
  languages?: Array<Volo_Abp_Localization_LanguageInfo> | null;
  currentCulture?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDto;
  defaultResourceName?: string | null;
  languagesMap?: {
    [key: string]: Array<Volo_Abp_NameValue>;
  } | null;
  languageFilesMap?: {
    [key: string]: Array<Volo_Abp_NameValue>;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationDto = {
  resources?: {
    [key: string]: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDto;
  } | null;
  currentCulture?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDto;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDto = {
  texts?: {
    [key: string]: string;
  } | null;
  baseResources?: Array<string> | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationSettingConfigurationDto = {
  values?: {
    [key: string]: string | null;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ClockDto = {
  kind?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDto = {
  displayName?: string | null;
  englishName?: string | null;
  threeLetterIsoLanguageName?: string | null;
  twoLetterIsoLanguageName?: string | null;
  isRightToLeft?: boolean;
  cultureName?: string | null;
  name?: string | null;
  nativeName?: string | null;
  dateTimeFormat?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_DateTimeFormatDto;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentUserDto = {
  isAuthenticated?: boolean;
  id?: string | null;
  tenantId?: string | null;
  impersonatorUserId?: string | null;
  impersonatorTenantId?: string | null;
  impersonatorUserName?: string | null;
  impersonatorTenantName?: string | null;
  userName?: string | null;
  name?: string | null;
  surName?: string | null;
  email?: string | null;
  emailVerified?: boolean;
  phoneNumber?: string | null;
  phoneNumberVerified?: boolean;
  roles?: Array<string> | null;
  sessionId?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_DateTimeFormatDto = {
  calendarAlgorithmType?: string | null;
  dateTimeFormatLong?: string | null;
  shortDatePattern?: string | null;
  fullDateTimePattern?: string | null;
  dateSeparator?: string | null;
  shortTimePattern?: string | null;
  longTimePattern?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_IanaTimeZone = {
  timeZoneName?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_EntityExtensionDto = {
  properties?: {
    [key: string]: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyDto;
  } | null;
  configuration?: {
    [key: string]: unknown;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumDto = {
  fields?: Array<Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumFieldDto> | null;
  localizationResource?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumFieldDto = {
  name?: string | null;
  value?: unknown;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiCreateDto = {
  isAvailable?: boolean;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiDto = {
  onGet?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiGetDto;
  onCreate?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiCreateDto;
  onUpdate?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiUpdateDto;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiGetDto = {
  isAvailable?: boolean;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiUpdateDto = {
  isAvailable?: boolean;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyAttributeDto = {
  typeSimple?: string | null;
  config?: {
    [key: string]: unknown;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyDto = {
  type?: string | null;
  typeSimple?: string | null;
  displayName?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_LocalizableStringDto;
  api?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiDto;
  ui?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiDto;
  attributes?: Array<Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyAttributeDto> | null;
  configuration?: {
    [key: string]: unknown;
  } | null;
  defaultValue?: unknown;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiDto = {
  onTable?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiTableDto;
  onCreateForm?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDto;
  onEditForm?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDto;
  lookup?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiLookupDto;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDto = {
  isVisible?: boolean;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiLookupDto = {
  url?: string | null;
  resultListPropertyName?: string | null;
  displayPropertyName?: string | null;
  valuePropertyName?: string | null;
  filterParamName?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiTableDto = {
  isVisible?: boolean;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_LocalizableStringDto = {
  name?: string | null;
  resource?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ModuleExtensionDto = {
  entities?: {
    [key: string]: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_EntityExtensionDto;
  } | null;
  configuration?: {
    [key: string]: unknown;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ObjectExtensionsDto = {
  modules?: {
    [key: string]: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ModuleExtensionDto;
  } | null;
  enums?: {
    [key: string]: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumDto;
  } | null;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimeZone = {
  iana?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_IanaTimeZone;
  windows?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_WindowsTimeZone;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimingDto = {
  timeZone?: Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimeZone;
};

export type Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_WindowsTimeZone = {
  timeZoneId?: string | null;
};

export type Volo_Abp_AspNetCore_Mvc_MultiTenancy_CurrentTenantDto = {
  id?: string | null;
  name?: string | null;
  isAvailable?: boolean;
};

export type Volo_Abp_AspNetCore_Mvc_MultiTenancy_MultiTenancyInfoDto = {
  isEnabled?: boolean;
};

export type Volo_Abp_Http_Modeling_ActionApiDescriptionModel = {
  uniqueName?: string | null;
  name?: string | null;
  httpMethod?: string | null;
  url?: string | null;
  supportedVersions?: Array<string> | null;
  parametersOnMethod?: Array<Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModel> | null;
  parameters?: Array<Volo_Abp_Http_Modeling_ParameterApiDescriptionModel> | null;
  returnValue?: Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModel;
  allowAnonymous?: boolean | null;
  implementFrom?: string | null;
};

export type Volo_Abp_Http_Modeling_ApplicationApiDescriptionModel = {
  modules?: {
    [key: string]: Volo_Abp_Http_Modeling_ModuleApiDescriptionModel;
  } | null;
  types?: {
    [key: string]: Volo_Abp_Http_Modeling_TypeApiDescriptionModel;
  } | null;
};

export type Volo_Abp_Http_Modeling_ControllerApiDescriptionModel = {
  controllerName?: string | null;
  controllerGroupName?: string | null;
  isRemoteService?: boolean;
  isIntegrationService?: boolean;
  apiVersion?: string | null;
  type?: string | null;
  interfaces?: Array<Volo_Abp_Http_Modeling_ControllerInterfaceApiDescriptionModel> | null;
  actions?: {
    [key: string]: Volo_Abp_Http_Modeling_ActionApiDescriptionModel;
  } | null;
};

export type Volo_Abp_Http_Modeling_ControllerInterfaceApiDescriptionModel = {
  type?: string | null;
  name?: string | null;
  methods?: Array<Volo_Abp_Http_Modeling_InterfaceMethodApiDescriptionModel> | null;
};

export type Volo_Abp_Http_Modeling_InterfaceMethodApiDescriptionModel = {
  name?: string | null;
  parametersOnMethod?: Array<Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModel> | null;
  returnValue?: Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModel;
};

export type Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModel = {
  name?: string | null;
  typeAsString?: string | null;
  type?: string | null;
  typeSimple?: string | null;
  isOptional?: boolean;
  defaultValue?: unknown;
};

export type Volo_Abp_Http_Modeling_ModuleApiDescriptionModel = {
  rootPath?: string | null;
  remoteServiceName?: string | null;
  controllers?: {
    [key: string]: Volo_Abp_Http_Modeling_ControllerApiDescriptionModel;
  } | null;
};

export type Volo_Abp_Http_Modeling_ParameterApiDescriptionModel = {
  nameOnMethod?: string | null;
  name?: string | null;
  jsonName?: string | null;
  type?: string | null;
  typeSimple?: string | null;
  isOptional?: boolean;
  defaultValue?: unknown;
  constraintTypes?: Array<string> | null;
  bindingSourceId?: string | null;
  descriptorName?: string | null;
};

export type Volo_Abp_Http_Modeling_PropertyApiDescriptionModel = {
  name?: string | null;
  jsonName?: string | null;
  type?: string | null;
  typeSimple?: string | null;
  isRequired?: boolean;
  minLength?: number | null;
  maxLength?: number | null;
  minimum?: string | null;
  maximum?: string | null;
  regex?: string | null;
};

export type Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModel = {
  type?: string | null;
  typeSimple?: string | null;
};

export type Volo_Abp_Http_Modeling_TypeApiDescriptionModel = {
  baseType?: string | null;
  isEnum?: boolean;
  enumNames?: Array<string> | null;
  enumValues?: Array<unknown> | null;
  genericArguments?: Array<string> | null;
  properties?: Array<Volo_Abp_Http_Modeling_PropertyApiDescriptionModel> | null;
};

export type Volo_Abp_Http_RemoteServiceErrorInfo = {
  code?: string | null;
  message?: string | null;
  details?: string | null;
  data?: {
    [key: string]: unknown;
  } | null;
  validationErrors?: Array<Volo_Abp_Http_RemoteServiceValidationErrorInfo> | null;
};

export type Volo_Abp_Http_RemoteServiceErrorResponse = {
  error?: Volo_Abp_Http_RemoteServiceErrorInfo;
};

export type Volo_Abp_Http_RemoteServiceValidationErrorInfo = {
  message?: string | null;
  members?: Array<string> | null;
};

export type Volo_Abp_Localization_LanguageInfo = {
  cultureName?: string | null;
  uiCultureName?: string | null;
  displayName?: string | null;
  readonly twoLetterISOLanguageName?: string | null;
};

export type Volo_Abp_NameValue = {
  name?: string | null;
  value?: string | null;
};

export type PostApiTagServiceTagData = {
  requestBody?: UniRefund_TagService_Tags_CreateTagRequestDto;
};

export type PostApiTagServiceTagResponse = UniRefund_TagService_Tags_TagDto;

export type GetApiTagServiceTagData = {
  exportEndDate?: string;
  exportStartDate?: string;
  invoiceNumber?: string;
  isEarlyRefunded?: boolean;
  issuedEndDate?: string;
  issuedStartDate?: string;
  maxResultCount?: number;
  merchantIds?: Array<string>;
  paidEndDate?: string;
  paidStartDate?: string;
  refundTypes?: Array<UniRefund_TagService_Tags_Enums_RefundType>;
  skipCount?: number;
  sorting?: string;
  statuses?: Array<UniRefund_TagService_Tags_TagStatusType>;
  tagNumber?: string;
  travellerDocumentNumber?: string;
  travellerFullName?: string;
  travellerIds?: Array<string>;
};

export type GetApiTagServiceTagResponse = TagListResponseDto_TagListItemDto;

export type PutApiTagServiceTagByIdData = {
  id: string;
  requestBody?: UniRefund_TagService_Tags_UpdateTagDto;
};

export type PutApiTagServiceTagByIdResponse = UniRefund_TagService_Tags_TagDto;

export type DeleteApiTagServiceTagByIdData = {
  id: string;
};

export type DeleteApiTagServiceTagByIdResponse = unknown;

export type GetApiTagServiceTagByIdDetailData = {
  id: string;
};

export type GetApiTagServiceTagByIdDetailResponse = UniRefund_TagService_Tags_TagDetailDto;

export type GetApiTagServiceTagTagsRefundData = {
  isExportValidated: boolean;
  maxResultCount?: number;
  refundPointId: string;
  refundType: UniRefund_TagService_Tags_Enums_RefundType;
  skipCount?: number;
  tagIds?: Array<string>;
  travellerDocumentNumber: string;
};

export type GetApiTagServiceTagTagsRefundResponse = PagedResultDto_TagListItemDto;

export type GetApiTagServiceTagSummaryData = {
  exportEndDate?: string;
  exportStartDate?: string;
  invoiceNumber?: string;
  isEarlyRefunded?: boolean;
  issuedEndDate?: string;
  issuedStartDate?: string;
  maxResultCount?: number;
  merchantIds?: Array<string>;
  paidEndDate?: string;
  paidStartDate?: string;
  refundTypes?: Array<UniRefund_TagService_Tags_Enums_RefundType>;
  skipCount?: number;
  sorting?: string;
  statuses?: Array<UniRefund_TagService_Tags_TagStatusType>;
  tagNumber?: string;
  travellerDocumentNumber?: string;
  travellerFullName?: string;
  travellerIds?: Array<string>;
};

export type GetApiTagServiceTagSummaryResponse = UniRefund_TagService_Tags_TagListSummaryDto;

export type GetApiTagServiceTagTagsRefundFeesData = {
  refundDate: string;
  refundPointId: string;
  refundType: UniRefund_TagService_Tags_Enums_RefundType;
  tagIds: Array<string>;
};

export type GetApiTagServiceTagTagsRefundFeesResponse = Array<UniRefund_TagService_Tags_TagRefundFeesDto>;

export type PutApiTagServiceTagExportValidationByIdData = {
  id: string;
  requestBody?: UniRefund_TagService_Tags_ExportValidationRequestDto;
};

export type PutApiTagServiceTagExportValidationByIdResponse =
  UniRefund_ExportValidationService_ExportValidations_ExportValidationDto;
