// This file is auto-generated by @hey-api/openapi-ts

export const $Amazon_Rekognition_EmotionName = {
  type: "object",
  properties: {
    value: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_LandmarkType = {
  type: "object",
  properties: {
    value: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_LivenessSessionStatus = {
  type: "object",
  properties: {
    value: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_AuditImage = {
  type: "object",
  properties: {
    boundingBox: {
      type: "object",
      properties: {
        height: {
          type: "number",
          format: "float",
          nullable: true,
        },
        left: {
          type: "number",
          format: "float",
          nullable: true,
        },
        top: {
          type: "number",
          format: "float",
          nullable: true,
        },
        width: {
          type: "number",
          format: "float",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    bytes: {
      type: "object",
      properties: {
        canTimeout: {
          type: "boolean",
          readOnly: true,
        },
        readTimeout: {
          type: "integer",
          format: "int32",
        },
        writeTimeout: {
          type: "integer",
          format: "int32",
        },
        canRead: {
          type: "boolean",
          readOnly: true,
        },
        canSeek: {
          type: "boolean",
          readOnly: true,
        },
        canWrite: {
          type: "boolean",
          readOnly: true,
        },
        capacity: {
          type: "integer",
          format: "int32",
        },
        length: {
          type: "integer",
          format: "int64",
          readOnly: true,
        },
        position: {
          type: "integer",
          format: "int64",
        },
      },
      additionalProperties: false,
    },
    s3Object: {
      type: "object",
      properties: {
        bucket: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        version: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_BoundingBox = {
  type: "object",
  properties: {
    height: {
      type: "number",
      format: "float",
      nullable: true,
    },
    left: {
      type: "number",
      format: "float",
      nullable: true,
    },
    top: {
      type: "number",
      format: "float",
      nullable: true,
    },
    width: {
      type: "number",
      format: "float",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_CompareFacesMatch = {
  type: "object",
  properties: {
    face: {
      type: "object",
      properties: {
        boundingBox: {
          type: "object",
          properties: {
            height: {
              type: "number",
              format: "float",
              nullable: true,
            },
            left: {
              type: "number",
              format: "float",
              nullable: true,
            },
            top: {
              type: "number",
              format: "float",
              nullable: true,
            },
            width: {
              type: "number",
              format: "float",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        confidence: {
          type: "number",
          format: "float",
          nullable: true,
        },
        emotions: {
          type: "array",
          items: {
            type: "object",
            properties: {
              confidence: {
                type: "number",
                format: "float",
                nullable: true,
              },
              type: {
                type: "object",
                properties: {
                  value: {
                    type: "string",
                    nullable: true,
                    readOnly: true,
                  },
                },
                additionalProperties: false,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        landmarks: {
          type: "array",
          items: {
            type: "object",
            properties: {
              type: {
                type: "object",
                properties: {
                  value: {
                    type: "string",
                    nullable: true,
                    readOnly: true,
                  },
                },
                additionalProperties: false,
              },
              x: {
                type: "number",
                format: "float",
                nullable: true,
              },
              y: {
                type: "number",
                format: "float",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        pose: {
          type: "object",
          properties: {
            pitch: {
              type: "number",
              format: "float",
              nullable: true,
            },
            roll: {
              type: "number",
              format: "float",
              nullable: true,
            },
            yaw: {
              type: "number",
              format: "float",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        quality: {
          type: "object",
          properties: {
            brightness: {
              type: "number",
              format: "float",
              nullable: true,
            },
            sharpness: {
              type: "number",
              format: "float",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        smile: {
          type: "object",
          properties: {
            confidence: {
              type: "number",
              format: "float",
              nullable: true,
            },
            value: {
              type: "boolean",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    similarity: {
      type: "number",
      format: "float",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_CompareFacesResponse = {
  type: "object",
  properties: {
    responseMetadata: {
      type: "object",
      properties: {
        requestId: {
          type: "string",
          nullable: true,
        },
        metadata: {
          type: "object",
          additionalProperties: {
            type: "string",
          },
          nullable: true,
          readOnly: true,
        },
        checksumAlgorithm: {
          enum: ["NONE", "CRC32C", "CRC32", "SHA256", "SHA1", "CRC64NVME"],
          type: "string",
        },
        checksumValidationStatus: {
          enum: ["NOT_VALIDATED", "PENDING_RESPONSE_READ", "SUCCESSFUL", "INVALID"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    contentLength: {
      type: "integer",
      format: "int64",
    },
    httpStatusCode: {
      enum: [
        "Continue",
        "SwitchingProtocols",
        "Processing",
        "EarlyHints",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultiStatus",
        "AlreadyReported",
        "IMUsed",
        "MultipleChoices",
        "MovedPermanently",
        "Found",
        "SeeOther",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "PermanentRedirect",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "RequestEntityTooLarge",
        "RequestUriTooLong",
        "UnsupportedMediaType",
        "RequestedRangeNotSatisfiable",
        "ExpectationFailed",
        "MisdirectedRequest",
        "UnprocessableEntity",
        "Locked",
        "FailedDependency",
        "UpgradeRequired",
        "PreconditionRequired",
        "TooManyRequests",
        "RequestHeaderFieldsTooLarge",
        "UnavailableForLegalReasons",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported",
        "VariantAlsoNegotiates",
        "InsufficientStorage",
        "LoopDetected",
        "NotExtended",
        "NetworkAuthenticationRequired",
      ],
      type: "string",
    },
    faceMatches: {
      type: "array",
      items: {
        type: "object",
        properties: {
          face: {
            type: "object",
            properties: {
              boundingBox: {
                type: "object",
                properties: {
                  height: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  left: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  top: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  width: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                },
                additionalProperties: false,
              },
              confidence: {
                type: "number",
                format: "float",
                nullable: true,
              },
              emotions: {
                type: "array",
                items: {
                  type: "object",
                  properties: {
                    confidence: {
                      type: "number",
                      format: "float",
                      nullable: true,
                    },
                    type: {
                      type: "object",
                      properties: {
                        value: {
                          type: "string",
                          nullable: true,
                          readOnly: true,
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                nullable: true,
              },
              landmarks: {
                type: "array",
                items: {
                  type: "object",
                  properties: {
                    type: {
                      type: "object",
                      properties: {
                        value: {
                          type: "string",
                          nullable: true,
                          readOnly: true,
                        },
                      },
                      additionalProperties: false,
                    },
                    x: {
                      type: "number",
                      format: "float",
                      nullable: true,
                    },
                    y: {
                      type: "number",
                      format: "float",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                nullable: true,
              },
              pose: {
                type: "object",
                properties: {
                  pitch: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  roll: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  yaw: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                },
                additionalProperties: false,
              },
              quality: {
                type: "object",
                properties: {
                  brightness: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  sharpness: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                },
                additionalProperties: false,
              },
              smile: {
                type: "object",
                properties: {
                  confidence: {
                    type: "number",
                    format: "float",
                    nullable: true,
                  },
                  value: {
                    type: "boolean",
                    nullable: true,
                  },
                },
                additionalProperties: false,
              },
            },
            additionalProperties: false,
          },
          similarity: {
            type: "number",
            format: "float",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    sourceImageFace: {
      type: "object",
      properties: {
        boundingBox: {
          type: "object",
          properties: {
            height: {
              type: "number",
              format: "float",
              nullable: true,
            },
            left: {
              type: "number",
              format: "float",
              nullable: true,
            },
            top: {
              type: "number",
              format: "float",
              nullable: true,
            },
            width: {
              type: "number",
              format: "float",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        confidence: {
          type: "number",
          format: "float",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    sourceImageOrientationCorrection: {
      type: "object",
      properties: {
        value: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
      },
      additionalProperties: false,
    },
    targetImageOrientationCorrection: {
      type: "object",
      properties: {
        value: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
      },
      additionalProperties: false,
    },
    unmatchedFaces: {
      type: "array",
      items: {
        type: "object",
        properties: {
          boundingBox: {
            type: "object",
            properties: {
              height: {
                type: "number",
                format: "float",
                nullable: true,
              },
              left: {
                type: "number",
                format: "float",
                nullable: true,
              },
              top: {
                type: "number",
                format: "float",
                nullable: true,
              },
              width: {
                type: "number",
                format: "float",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          confidence: {
            type: "number",
            format: "float",
            nullable: true,
          },
          emotions: {
            type: "array",
            items: {
              type: "object",
              properties: {
                confidence: {
                  type: "number",
                  format: "float",
                  nullable: true,
                },
                type: {
                  type: "object",
                  properties: {
                    value: {
                      type: "string",
                      nullable: true,
                      readOnly: true,
                    },
                  },
                  additionalProperties: false,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          landmarks: {
            type: "array",
            items: {
              type: "object",
              properties: {
                type: {
                  type: "object",
                  properties: {
                    value: {
                      type: "string",
                      nullable: true,
                      readOnly: true,
                    },
                  },
                  additionalProperties: false,
                },
                x: {
                  type: "number",
                  format: "float",
                  nullable: true,
                },
                y: {
                  type: "number",
                  format: "float",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          pose: {
            type: "object",
            properties: {
              pitch: {
                type: "number",
                format: "float",
                nullable: true,
              },
              roll: {
                type: "number",
                format: "float",
                nullable: true,
              },
              yaw: {
                type: "number",
                format: "float",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          quality: {
            type: "object",
            properties: {
              brightness: {
                type: "number",
                format: "float",
                nullable: true,
              },
              sharpness: {
                type: "number",
                format: "float",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          smile: {
            type: "object",
            properties: {
              confidence: {
                type: "number",
                format: "float",
                nullable: true,
              },
              value: {
                type: "boolean",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_ComparedFace = {
  type: "object",
  properties: {
    boundingBox: {
      type: "object",
      properties: {
        height: {
          type: "number",
          format: "float",
          nullable: true,
        },
        left: {
          type: "number",
          format: "float",
          nullable: true,
        },
        top: {
          type: "number",
          format: "float",
          nullable: true,
        },
        width: {
          type: "number",
          format: "float",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    confidence: {
      type: "number",
      format: "float",
      nullable: true,
    },
    emotions: {
      type: "array",
      items: {
        type: "object",
        properties: {
          confidence: {
            type: "number",
            format: "float",
            nullable: true,
          },
          type: {
            type: "object",
            properties: {
              value: {
                type: "string",
                nullable: true,
                readOnly: true,
              },
            },
            additionalProperties: false,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    landmarks: {
      type: "array",
      items: {
        type: "object",
        properties: {
          type: {
            type: "object",
            properties: {
              value: {
                type: "string",
                nullable: true,
                readOnly: true,
              },
            },
            additionalProperties: false,
          },
          x: {
            type: "number",
            format: "float",
            nullable: true,
          },
          y: {
            type: "number",
            format: "float",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    pose: {
      type: "object",
      properties: {
        pitch: {
          type: "number",
          format: "float",
          nullable: true,
        },
        roll: {
          type: "number",
          format: "float",
          nullable: true,
        },
        yaw: {
          type: "number",
          format: "float",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    quality: {
      type: "object",
      properties: {
        brightness: {
          type: "number",
          format: "float",
          nullable: true,
        },
        sharpness: {
          type: "number",
          format: "float",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    smile: {
      type: "object",
      properties: {
        confidence: {
          type: "number",
          format: "float",
          nullable: true,
        },
        value: {
          type: "boolean",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_ComparedSourceImageFace = {
  type: "object",
  properties: {
    boundingBox: {
      type: "object",
      properties: {
        height: {
          type: "number",
          format: "float",
          nullable: true,
        },
        left: {
          type: "number",
          format: "float",
          nullable: true,
        },
        top: {
          type: "number",
          format: "float",
          nullable: true,
        },
        width: {
          type: "number",
          format: "float",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    confidence: {
      type: "number",
      format: "float",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_CreateFaceLivenessSessionResponse = {
  type: "object",
  properties: {
    responseMetadata: {
      type: "object",
      properties: {
        requestId: {
          type: "string",
          nullable: true,
        },
        metadata: {
          type: "object",
          additionalProperties: {
            type: "string",
          },
          nullable: true,
          readOnly: true,
        },
        checksumAlgorithm: {
          enum: ["NONE", "CRC32C", "CRC32", "SHA256", "SHA1", "CRC64NVME"],
          type: "string",
        },
        checksumValidationStatus: {
          enum: ["NOT_VALIDATED", "PENDING_RESPONSE_READ", "SUCCESSFUL", "INVALID"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    contentLength: {
      type: "integer",
      format: "int64",
    },
    httpStatusCode: {
      enum: [
        "Continue",
        "SwitchingProtocols",
        "Processing",
        "EarlyHints",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultiStatus",
        "AlreadyReported",
        "IMUsed",
        "MultipleChoices",
        "MovedPermanently",
        "Found",
        "SeeOther",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "PermanentRedirect",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "RequestEntityTooLarge",
        "RequestUriTooLong",
        "UnsupportedMediaType",
        "RequestedRangeNotSatisfiable",
        "ExpectationFailed",
        "MisdirectedRequest",
        "UnprocessableEntity",
        "Locked",
        "FailedDependency",
        "UpgradeRequired",
        "PreconditionRequired",
        "TooManyRequests",
        "RequestHeaderFieldsTooLarge",
        "UnavailableForLegalReasons",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported",
        "VariantAlsoNegotiates",
        "InsufficientStorage",
        "LoopDetected",
        "NotExtended",
        "NetworkAuthenticationRequired",
      ],
      type: "string",
    },
    sessionId: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_Emotion = {
  type: "object",
  properties: {
    confidence: {
      type: "number",
      format: "float",
      nullable: true,
    },
    type: {
      type: "object",
      properties: {
        value: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_GetFaceLivenessSessionResultsResponse = {
  type: "object",
  properties: {
    responseMetadata: {
      type: "object",
      properties: {
        requestId: {
          type: "string",
          nullable: true,
        },
        metadata: {
          type: "object",
          additionalProperties: {
            type: "string",
          },
          nullable: true,
          readOnly: true,
        },
        checksumAlgorithm: {
          enum: ["NONE", "CRC32C", "CRC32", "SHA256", "SHA1", "CRC64NVME"],
          type: "string",
        },
        checksumValidationStatus: {
          enum: ["NOT_VALIDATED", "PENDING_RESPONSE_READ", "SUCCESSFUL", "INVALID"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    contentLength: {
      type: "integer",
      format: "int64",
    },
    httpStatusCode: {
      enum: [
        "Continue",
        "SwitchingProtocols",
        "Processing",
        "EarlyHints",
        "OK",
        "Created",
        "Accepted",
        "NonAuthoritativeInformation",
        "NoContent",
        "ResetContent",
        "PartialContent",
        "MultiStatus",
        "AlreadyReported",
        "IMUsed",
        "MultipleChoices",
        "MovedPermanently",
        "Found",
        "SeeOther",
        "NotModified",
        "UseProxy",
        "Unused",
        "TemporaryRedirect",
        "PermanentRedirect",
        "BadRequest",
        "Unauthorized",
        "PaymentRequired",
        "Forbidden",
        "NotFound",
        "MethodNotAllowed",
        "NotAcceptable",
        "ProxyAuthenticationRequired",
        "RequestTimeout",
        "Conflict",
        "Gone",
        "LengthRequired",
        "PreconditionFailed",
        "RequestEntityTooLarge",
        "RequestUriTooLong",
        "UnsupportedMediaType",
        "RequestedRangeNotSatisfiable",
        "ExpectationFailed",
        "MisdirectedRequest",
        "UnprocessableEntity",
        "Locked",
        "FailedDependency",
        "UpgradeRequired",
        "PreconditionRequired",
        "TooManyRequests",
        "RequestHeaderFieldsTooLarge",
        "UnavailableForLegalReasons",
        "InternalServerError",
        "NotImplemented",
        "BadGateway",
        "ServiceUnavailable",
        "GatewayTimeout",
        "HttpVersionNotSupported",
        "VariantAlsoNegotiates",
        "InsufficientStorage",
        "LoopDetected",
        "NotExtended",
        "NetworkAuthenticationRequired",
      ],
      type: "string",
    },
    auditImages: {
      type: "array",
      items: {
        type: "object",
        properties: {
          boundingBox: {
            type: "object",
            properties: {
              height: {
                type: "number",
                format: "float",
                nullable: true,
              },
              left: {
                type: "number",
                format: "float",
                nullable: true,
              },
              top: {
                type: "number",
                format: "float",
                nullable: true,
              },
              width: {
                type: "number",
                format: "float",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          bytes: {
            type: "object",
            properties: {
              canTimeout: {
                type: "boolean",
                readOnly: true,
              },
              readTimeout: {
                type: "integer",
                format: "int32",
              },
              writeTimeout: {
                type: "integer",
                format: "int32",
              },
              canRead: {
                type: "boolean",
                readOnly: true,
              },
              canSeek: {
                type: "boolean",
                readOnly: true,
              },
              canWrite: {
                type: "boolean",
                readOnly: true,
              },
              capacity: {
                type: "integer",
                format: "int32",
              },
              length: {
                type: "integer",
                format: "int64",
                readOnly: true,
              },
              position: {
                type: "integer",
                format: "int64",
              },
            },
            additionalProperties: false,
          },
          s3Object: {
            type: "object",
            properties: {
              bucket: {
                type: "string",
                nullable: true,
              },
              name: {
                type: "string",
                nullable: true,
              },
              version: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    confidence: {
      type: "number",
      format: "float",
      nullable: true,
    },
    referenceImage: {
      type: "object",
      properties: {
        boundingBox: {
          type: "object",
          properties: {
            height: {
              type: "number",
              format: "float",
              nullable: true,
            },
            left: {
              type: "number",
              format: "float",
              nullable: true,
            },
            top: {
              type: "number",
              format: "float",
              nullable: true,
            },
            width: {
              type: "number",
              format: "float",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        bytes: {
          type: "object",
          properties: {
            canTimeout: {
              type: "boolean",
              readOnly: true,
            },
            readTimeout: {
              type: "integer",
              format: "int32",
            },
            writeTimeout: {
              type: "integer",
              format: "int32",
            },
            canRead: {
              type: "boolean",
              readOnly: true,
            },
            canSeek: {
              type: "boolean",
              readOnly: true,
            },
            canWrite: {
              type: "boolean",
              readOnly: true,
            },
            capacity: {
              type: "integer",
              format: "int32",
            },
            length: {
              type: "integer",
              format: "int64",
              readOnly: true,
            },
            position: {
              type: "integer",
              format: "int64",
            },
          },
          additionalProperties: false,
        },
        s3Object: {
          type: "object",
          properties: {
            bucket: {
              type: "string",
              nullable: true,
            },
            name: {
              type: "string",
              nullable: true,
            },
            version: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    sessionId: {
      type: "string",
      nullable: true,
    },
    status: {
      type: "object",
      properties: {
        value: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_ImageQuality = {
  type: "object",
  properties: {
    brightness: {
      type: "number",
      format: "float",
      nullable: true,
    },
    sharpness: {
      type: "number",
      format: "float",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_Landmark = {
  type: "object",
  properties: {
    type: {
      type: "object",
      properties: {
        value: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
      },
      additionalProperties: false,
    },
    x: {
      type: "number",
      format: "float",
      nullable: true,
    },
    y: {
      type: "number",
      format: "float",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_Pose = {
  type: "object",
  properties: {
    pitch: {
      type: "number",
      format: "float",
      nullable: true,
    },
    roll: {
      type: "number",
      format: "float",
      nullable: true,
    },
    yaw: {
      type: "number",
      format: "float",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_S3Object = {
  type: "object",
  properties: {
    bucket: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    version: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_Model_Smile = {
  type: "object",
  properties: {
    confidence: {
      type: "number",
      format: "float",
      nullable: true,
    },
    value: {
      type: "boolean",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Rekognition_OrientationCorrection = {
  type: "object",
  properties: {
    value: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Amazon_Runtime_ChecksumValidationStatus = {
  enum: ["NOT_VALIDATED", "PENDING_RESPONSE_READ", "SUCCESSFUL", "INVALID"],
  type: "string",
} as const;

export const $Amazon_Runtime_CoreChecksumAlgorithm = {
  enum: ["NONE", "CRC32C", "CRC32", "SHA256", "SHA1", "CRC64NVME"],
  type: "string",
} as const;

export const $Amazon_Runtime_ResponseMetadata = {
  type: "object",
  properties: {
    requestId: {
      type: "string",
      nullable: true,
    },
    metadata: {
      type: "object",
      additionalProperties: {
        type: "string",
      },
      nullable: true,
      readOnly: true,
    },
    checksumAlgorithm: {
      enum: ["NONE", "CRC32C", "CRC32", "SHA256", "SHA1", "CRC64NVME"],
      type: "string",
    },
    checksumValidationStatus: {
      enum: ["NOT_VALIDATED", "PENDING_RESPONSE_READ", "SUCCESSFUL", "INVALID"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $PagedResultDto_EvidenceSessionListDto = {
  type: "object",
  properties: {
    items: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
          },
          isMRZRequired: {
            type: "boolean",
          },
          mrzStatus: {
            enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
            type: "string",
          },
          mrzMethod: {
            enum: ["Textract", "Native"],
            type: "string",
          },
          mrzBeginTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          mrzEndTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          mrzUniversalDataId: {
            type: "string",
            format: "uuid",
            nullable: true,
          },
          mrzAttemptCount: {
            type: "integer",
            format: "int32",
          },
          isNFCRequired: {
            type: "boolean",
          },
          nfcStatus: {
            enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
            type: "string",
          },
          nfcMethod: {
            enum: ["Native"],
            type: "string",
          },
          nfcDataId: {
            type: "string",
            format: "uuid",
            nullable: true,
          },
          nfcBeginTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          nfcEndTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          isLivenessRequired: {
            type: "boolean",
          },
          livenessStatus: {
            enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
            type: "string",
          },
          livenessMethod: {
            enum: ["Amazon"],
            type: "string",
          },
          livenessBeginTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          livenessSessionId: {
            type: "string",
            nullable: true,
          },
          livenessEndTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          status: {
            enum: ["Created", "InProgress", "Completed", "Cancelled", "Failed"],
            type: "string",
          },
          source: {
            enum: ["SSR", "App", "AppClip", "API"],
            type: "string",
          },
          creationTime: {
            type: "string",
            format: "date-time",
          },
          endTime: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          merchantId: {
            type: "string",
            format: "uuid",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    totalCount: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const $PagedResultDto_TravellerListDto = {
  type: "object",
  properties: {
    items: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
          },
          firstName: {
            type: "string",
            nullable: true,
          },
          lastName: {
            type: "string",
            nullable: true,
          },
          fullName: {
            type: "string",
            nullable: true,
            readOnly: true,
          },
          birthDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          nationalityCountryCode2: {
            type: "string",
            nullable: true,
          },
          nationalityCountryName: {
            type: "string",
            nullable: true,
          },
          languagePreferenceCultureName: {
            type: "string",
            nullable: true,
          },
          gender: {
            enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
            type: "string",
          },
          identificationType: {
            enum: ["IdCard", "Passport"],
            type: "string",
          },
          userAccountId: {
            type: "string",
            format: "uuid",
            nullable: true,
          },
          hasUserAccount: {
            type: "boolean",
            readOnly: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    totalCount: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const $System_IO_MemoryStream = {
  type: "object",
  properties: {
    canTimeout: {
      type: "boolean",
      readOnly: true,
    },
    readTimeout: {
      type: "integer",
      format: "int32",
    },
    writeTimeout: {
      type: "integer",
      format: "int32",
    },
    canRead: {
      type: "boolean",
      readOnly: true,
    },
    canSeek: {
      type: "boolean",
      readOnly: true,
    },
    canWrite: {
      type: "boolean",
      readOnly: true,
    },
    capacity: {
      type: "integer",
      format: "int32",
    },
    length: {
      type: "integer",
      format: "int64",
      readOnly: true,
    },
    position: {
      type: "integer",
      format: "int64",
    },
  },
  additionalProperties: false,
} as const;

export const $System_Net_HttpStatusCode = {
  enum: [
    "Continue",
    "SwitchingProtocols",
    "Processing",
    "EarlyHints",
    "OK",
    "Created",
    "Accepted",
    "NonAuthoritativeInformation",
    "NoContent",
    "ResetContent",
    "PartialContent",
    "MultiStatus",
    "AlreadyReported",
    "IMUsed",
    "MultipleChoices",
    "MovedPermanently",
    "Found",
    "SeeOther",
    "NotModified",
    "UseProxy",
    "Unused",
    "TemporaryRedirect",
    "PermanentRedirect",
    "BadRequest",
    "Unauthorized",
    "PaymentRequired",
    "Forbidden",
    "NotFound",
    "MethodNotAllowed",
    "NotAcceptable",
    "ProxyAuthenticationRequired",
    "RequestTimeout",
    "Conflict",
    "Gone",
    "LengthRequired",
    "PreconditionFailed",
    "RequestEntityTooLarge",
    "RequestUriTooLong",
    "UnsupportedMediaType",
    "RequestedRangeNotSatisfiable",
    "ExpectationFailed",
    "MisdirectedRequest",
    "UnprocessableEntity",
    "Locked",
    "FailedDependency",
    "UpgradeRequired",
    "PreconditionRequired",
    "TooManyRequests",
    "RequestHeaderFieldsTooLarge",
    "UnavailableForLegalReasons",
    "InternalServerError",
    "NotImplemented",
    "BadGateway",
    "ServiceUnavailable",
    "GatewayTimeout",
    "HttpVersionNotSupported",
    "VariantAlsoNegotiates",
    "InsufficientStorage",
    "LoopDetected",
    "NotExtended",
    "NetworkAuthenticationRequired",
  ],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Addresses_AddressCreateDto = {
  type: "object",
  properties: {
    fullAddress: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Addresses_AddressDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    fullAddress: {
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Addresses_AddressUpSertDto = {
  type: "object",
  properties: {
    addressId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    fullAddress: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Emails_EmailCreateDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    emailAddress: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      format: "email",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["WORK", "PERSONAL"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Emails_EmailDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    emailAddress: {
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["WORK", "PERSONAL"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Emails_EmailUpSertDto = {
  type: "object",
  properties: {
    emailId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    emailAddress: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      format: "email",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["WORK", "PERSONAL"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Enums_AddressType = {
  enum: ["HOME", "OFFICE"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_EmailType = {
  enum: ["WORK", "PERSONAL"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_EvidenceSessionSource = {
  enum: ["SSR", "App", "AppClip", "API"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_EvidenceSessionStatus = {
  enum: ["Created", "InProgress", "Completed", "Cancelled", "Failed"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_EvidenceValidationType = {
  enum: ["MRZ", "NFC", "Liveness"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_GenderType = {
  enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_IdentificationType = {
  enum: ["IdCard", "Passport"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_LivenessMethod = {
  enum: ["Amazon"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_LivenessStatus = {
  enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_MRZMethod = {
  enum: ["Textract", "Native"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_MRZStatus = {
  enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_NFCMethod = {
  enum: ["Native"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_NFCStatus = {
  enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_Enums_TelephoneType = {
  enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
  type: "string",
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_AnalyzeDocumentByMRZDto = {
  type: "object",
  properties: {
    documentImageBase64: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_AnalyzeDocumentForMRZByEvidenceSessionDto = {
  type: "object",
  properties: {
    evidenceSessionId: {
      type: "string",
      format: "uuid",
    },
    documentImageBase64: {
      type: "string",
      nullable: true,
    },
    mrzUniversalData: {
      type: "object",
      properties: {
        documentType: {
          type: "string",
          nullable: true,
        },
        countryCode: {
          type: "string",
          nullable: true,
        },
        documentNumber: {
          type: "string",
          nullable: true,
        },
        documentNumberCheckDigit: {
          type: "string",
          nullable: true,
        },
        optionalData1: {
          type: "string",
          nullable: true,
        },
        birthDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        birthDateCheckDigit: {
          type: "string",
          nullable: true,
        },
        sex: {
          type: "string",
          nullable: true,
        },
        expiryDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        expiryDateCheckDigit: {
          type: "string",
          nullable: true,
        },
        nationality: {
          type: "string",
          nullable: true,
        },
        optionalData2: {
          type: "string",
          nullable: true,
        },
        optionalData2CheckDigit: {
          type: "string",
          nullable: true,
          deprecated: true,
        },
        names: {
          type: "string",
          nullable: true,
        },
        overallCheckDigit: {
          type: "string",
          nullable: true,
        },
        firstName: {
          type: "string",
          nullable: true,
        },
        lastName: {
          type: "string",
          nullable: true,
        },
        optionalData: {
          type: "string",
          nullable: true,
        },
        optionalDataCheckDigit: {
          type: "string",
          nullable: true,
        },
        mothersName: {
          type: "string",
          nullable: true,
        },
        fathersName: {
          type: "string",
          nullable: true,
        },
        issuedBy: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_EvidenceSessionCreateDto = {
  type: "object",
  properties: {
    isMRZRequired: {
      type: "boolean",
    },
    isNFCRequired: {
      type: "boolean",
    },
    isLivenessRequired: {
      type: "boolean",
    },
    source: {
      enum: ["SSR", "App", "AppClip", "API"],
      type: "string",
    },
    merchantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_EvidenceSessionDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    isMRZRequired: {
      type: "boolean",
    },
    mrzStatus: {
      enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
      type: "string",
    },
    mrzMethod: {
      enum: ["Textract", "Native"],
      type: "string",
    },
    mrzBeginTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    mrzEndTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    mrzUniversalData: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        documentType: {
          type: "string",
          nullable: true,
        },
        countryCode: {
          type: "string",
          nullable: true,
        },
        documentNumber: {
          type: "string",
          nullable: true,
        },
        documentNumberCheckDigit: {
          type: "string",
          nullable: true,
        },
        optionalData1: {
          type: "string",
          nullable: true,
        },
        birthDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        birthDateCheckDigit: {
          type: "string",
          nullable: true,
        },
        sex: {
          type: "string",
          nullable: true,
        },
        expiryDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        expiryDateCheckDigit: {
          type: "string",
          nullable: true,
        },
        nationality: {
          type: "string",
          nullable: true,
        },
        optionalData2: {
          type: "string",
          nullable: true,
        },
        optionalData2CheckDigit: {
          type: "string",
          nullable: true,
          deprecated: true,
        },
        names: {
          type: "string",
          nullable: true,
        },
        overallCheckDigit: {
          type: "string",
          nullable: true,
        },
        firstName: {
          type: "string",
          nullable: true,
        },
        lastName: {
          type: "string",
          nullable: true,
        },
        optionalData: {
          type: "string",
          nullable: true,
        },
        optionalDataCheckDigit: {
          type: "string",
          nullable: true,
        },
        mothersName: {
          type: "string",
          nullable: true,
        },
        fathersName: {
          type: "string",
          nullable: true,
        },
        issuedBy: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    mrzAttemptCount: {
      type: "integer",
      format: "int32",
    },
    isNFCRequired: {
      type: "boolean",
    },
    nfcStatus: {
      enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
      type: "string",
    },
    nfcMethod: {
      enum: ["Native"],
      type: "string",
    },
    nfcData: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        mrzData: {
          type: "string",
          nullable: true,
        },
        documentType: {
          type: "string",
          nullable: true,
        },
        documentSubType: {
          type: "string",
          nullable: true,
        },
        personalNumber: {
          type: "string",
          nullable: true,
        },
        documentNumber: {
          type: "string",
          nullable: true,
        },
        issuingAuthority: {
          type: "string",
          nullable: true,
        },
        documentExpiryDate: {
          type: "string",
          nullable: true,
        },
        firstName: {
          type: "string",
          nullable: true,
        },
        lastName: {
          type: "string",
          nullable: true,
        },
        dateOfBirth: {
          type: "string",
          format: "date-time",
        },
        gender: {
          type: "string",
          nullable: true,
        },
        nationality: {
          type: "string",
          nullable: true,
        },
        imageBase64: {
          type: "string",
          nullable: true,
        },
        passportSigned: {
          type: "boolean",
        },
        passportDataValid: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    nfcBeginTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nfcEndTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    isLivenessRequired: {
      type: "boolean",
    },
    livenessStatus: {
      enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
      type: "string",
    },
    livenessMethod: {
      enum: ["Amazon"],
      type: "string",
    },
    livenessSessionId: {
      type: "string",
      nullable: true,
    },
    livenessBeginTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    livenessEndTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    status: {
      enum: ["Created", "InProgress", "Completed", "Cancelled", "Failed"],
      type: "string",
    },
    source: {
      enum: ["SSR", "App", "AppClip", "API"],
      type: "string",
    },
    creationTime: {
      type: "string",
      format: "date-time",
    },
    endTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    merchantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_EvidenceSessionListDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    isMRZRequired: {
      type: "boolean",
    },
    mrzStatus: {
      enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
      type: "string",
    },
    mrzMethod: {
      enum: ["Textract", "Native"],
      type: "string",
    },
    mrzBeginTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    mrzEndTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    mrzUniversalDataId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    mrzAttemptCount: {
      type: "integer",
      format: "int32",
    },
    isNFCRequired: {
      type: "boolean",
    },
    nfcStatus: {
      enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
      type: "string",
    },
    nfcMethod: {
      enum: ["Native"],
      type: "string",
    },
    nfcDataId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    nfcBeginTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nfcEndTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    isLivenessRequired: {
      type: "boolean",
    },
    livenessStatus: {
      enum: ["NotStarted", "Started", "Validated", "Failed", "NotValidated"],
      type: "string",
    },
    livenessMethod: {
      enum: ["Amazon"],
      type: "string",
    },
    livenessBeginTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    livenessSessionId: {
      type: "string",
      nullable: true,
    },
    livenessEndTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    status: {
      enum: ["Created", "InProgress", "Completed", "Cancelled", "Failed"],
      type: "string",
    },
    source: {
      enum: ["SSR", "App", "AppClip", "API"],
      type: "string",
    },
    creationTime: {
      type: "string",
      format: "date-time",
    },
    endTime: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    merchantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_EvidenceSessionUpdateDto = {
  type: "object",
  properties: {
    evidenceValidationType: {
      enum: ["MRZ", "NFC", "Liveness"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_GetEvidenceSessionInput = {
  type: "object",
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_EvidenceSessions_ValidateNFCDto = {
  type: "object",
  properties: {
    evidenceSessionId: {
      type: "string",
      format: "uuid",
    },
    nfcData: {
      type: "object",
      properties: {
        mrzData: {
          type: "string",
          nullable: true,
        },
        documentType: {
          type: "string",
          nullable: true,
        },
        documentSubType: {
          type: "string",
          nullable: true,
        },
        personalNumber: {
          type: "string",
          nullable: true,
        },
        documentNumber: {
          type: "string",
          nullable: true,
        },
        issuingAuthority: {
          type: "string",
          nullable: true,
        },
        documentExpiryDate: {
          type: "string",
          nullable: true,
        },
        firstName: {
          type: "string",
          nullable: true,
        },
        lastName: {
          type: "string",
          nullable: true,
        },
        dateOfBirth: {
          type: "string",
          format: "date-time",
        },
        gender: {
          type: "string",
          nullable: true,
        },
        nationality: {
          type: "string",
          nullable: true,
        },
        imageBase64: {
          type: "string",
          nullable: true,
        },
        passportSigned: {
          type: "boolean",
        },
        passportDataValid: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_MRZUniversalDatas_MRZUniversalDataCreateDto = {
  type: "object",
  properties: {
    documentType: {
      type: "string",
      nullable: true,
    },
    countryCode: {
      type: "string",
      nullable: true,
    },
    documentNumber: {
      type: "string",
      nullable: true,
    },
    documentNumberCheckDigit: {
      type: "string",
      nullable: true,
    },
    optionalData1: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    birthDateCheckDigit: {
      type: "string",
      nullable: true,
    },
    sex: {
      type: "string",
      nullable: true,
    },
    expiryDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expiryDateCheckDigit: {
      type: "string",
      nullable: true,
    },
    nationality: {
      type: "string",
      nullable: true,
    },
    optionalData2: {
      type: "string",
      nullable: true,
    },
    optionalData2CheckDigit: {
      type: "string",
      nullable: true,
      deprecated: true,
    },
    names: {
      type: "string",
      nullable: true,
    },
    overallCheckDigit: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    optionalData: {
      type: "string",
      nullable: true,
    },
    optionalDataCheckDigit: {
      type: "string",
      nullable: true,
    },
    mothersName: {
      type: "string",
      nullable: true,
    },
    fathersName: {
      type: "string",
      nullable: true,
    },
    issuedBy: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_MRZUniversalDatas_MRZUniversalDataDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    documentType: {
      type: "string",
      nullable: true,
    },
    countryCode: {
      type: "string",
      nullable: true,
    },
    documentNumber: {
      type: "string",
      nullable: true,
    },
    documentNumberCheckDigit: {
      type: "string",
      nullable: true,
    },
    optionalData1: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    birthDateCheckDigit: {
      type: "string",
      nullable: true,
    },
    sex: {
      type: "string",
      nullable: true,
    },
    expiryDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expiryDateCheckDigit: {
      type: "string",
      nullable: true,
    },
    nationality: {
      type: "string",
      nullable: true,
    },
    optionalData2: {
      type: "string",
      nullable: true,
    },
    optionalData2CheckDigit: {
      type: "string",
      nullable: true,
      deprecated: true,
    },
    names: {
      type: "string",
      nullable: true,
    },
    overallCheckDigit: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    optionalData: {
      type: "string",
      nullable: true,
    },
    optionalDataCheckDigit: {
      type: "string",
      nullable: true,
    },
    mothersName: {
      type: "string",
      nullable: true,
    },
    fathersName: {
      type: "string",
      nullable: true,
    },
    issuedBy: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_NFCDatas_NFCDataCreateDto = {
  type: "object",
  properties: {
    mrzData: {
      type: "string",
      nullable: true,
    },
    documentType: {
      type: "string",
      nullable: true,
    },
    documentSubType: {
      type: "string",
      nullable: true,
    },
    personalNumber: {
      type: "string",
      nullable: true,
    },
    documentNumber: {
      type: "string",
      nullable: true,
    },
    issuingAuthority: {
      type: "string",
      nullable: true,
    },
    documentExpiryDate: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    dateOfBirth: {
      type: "string",
      format: "date-time",
    },
    gender: {
      type: "string",
      nullable: true,
    },
    nationality: {
      type: "string",
      nullable: true,
    },
    imageBase64: {
      type: "string",
      nullable: true,
    },
    passportSigned: {
      type: "boolean",
    },
    passportDataValid: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_NFCDatas_NFCDataDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    mrzData: {
      type: "string",
      nullable: true,
    },
    documentType: {
      type: "string",
      nullable: true,
    },
    documentSubType: {
      type: "string",
      nullable: true,
    },
    personalNumber: {
      type: "string",
      nullable: true,
    },
    documentNumber: {
      type: "string",
      nullable: true,
    },
    issuingAuthority: {
      type: "string",
      nullable: true,
    },
    documentExpiryDate: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    dateOfBirth: {
      type: "string",
      format: "date-time",
    },
    gender: {
      type: "string",
      nullable: true,
    },
    nationality: {
      type: "string",
      nullable: true,
    },
    imageBase64: {
      type: "string",
      nullable: true,
    },
    passportSigned: {
      type: "boolean",
    },
    passportDataValid: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Rekognition_CompareFacesRequestDto = {
  type: "object",
  properties: {
    sessionId: {
      type: "string",
      nullable: true,
    },
    sourceImageBase64: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Telephones_TelephoneCreateDto = {
  type: "object",
  properties: {
    ituCountryCode: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    areaCode: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    localNumber: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Telephones_TelephoneDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    ituCountryCode: {
      type: "string",
      nullable: true,
    },
    areaCode: {
      type: "string",
      nullable: true,
    },
    localNumber: {
      type: "string",
      nullable: true,
    },
    fullNumber: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Telephones_TelephoneUpSertDto = {
  type: "object",
  properties: {
    telephoneId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    ituCountryCode: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    areaCode: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    localNumber: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    isPrimary: {
      type: "boolean",
    },
    type: {
      enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_CreateTravellerDocumentDto = {
  type: "object",
  properties: {
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    issueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expirationDate: {
      type: "string",
      format: "date-time",
    },
    residenceCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    nationalityCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    identificationType: {
      enum: ["IdCard", "Passport"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_CreateTravellerDocumentResponseDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    travellerId: {
      type: "string",
      format: "uuid",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_TravellerDocumentDto = {
  type: "object",
  properties: {
    travellerId: {
      type: "string",
      format: "uuid",
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    fullName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    issueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expirationDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    identificationType: {
      enum: ["IdCard", "Passport"],
      type: "string",
    },
    residenceCountryCode2: {
      type: "string",
      nullable: true,
    },
    nationalityCountryCode2: {
      type: "string",
      nullable: true,
    },
    residenceCountryName: {
      type: "string",
      nullable: true,
    },
    nationalityCountryName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_TravellerDocumentProfileDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
    residenceCountryCode2: {
      type: "string",
      nullable: true,
    },
    residenceCountryName: {
      type: "string",
      nullable: true,
    },
    nationalityCountryCode2: {
      type: "string",
      nullable: true,
    },
    nationalityCountryName: {
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    fullName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    issueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expirationDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    identificationType: {
      enum: ["IdCard", "Passport"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_UpdateTravellerDocumentDto = {
  type: "object",
  properties: {
    travellerDocumentId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    issueDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    expirationDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    residenceCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    nationalityCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    identificationType: {
      enum: ["IdCard", "Passport"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_TravellerDocuments_UpdateTravellerDocumentResponseDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    travellerId: {
      type: "string",
      format: "uuid",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_CreateTravellerDto = {
  type: "object",
  properties: {
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
      readOnly: true,
    },
    firstName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    lastName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nationalityCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    languagePreferenceCultureName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    gender: {
      enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
      type: "string",
    },
    travellerDocument: {
      type: "object",
      properties: {
        firstName: {
          type: "string",
          nullable: true,
        },
        lastName: {
          type: "string",
          nullable: true,
        },
        travelDocumentNumber: {
          type: "string",
          nullable: true,
        },
        birthDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        issueDate: {
          type: "string",
          format: "date-time",
          nullable: true,
        },
        expirationDate: {
          type: "string",
          format: "date-time",
        },
        residenceCountryCode2: {
          maxLength: 2,
          minLength: 2,
          type: "string",
          nullable: true,
        },
        nationalityCountryCode2: {
          maxLength: 2,
          minLength: 2,
          type: "string",
          nullable: true,
        },
        identificationType: {
          enum: ["IdCard", "Passport"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_CreateTravellerResponseDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_CreateTravellerWithComponentsDto = {
  type: "object",
  properties: {
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
      readOnly: true,
    },
    firstName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    lastName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nationalityCountryCode2: {
      maxLength: 2,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    languagePreferenceCultureName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    gender: {
      enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
      type: "string",
    },
    travellerDocuments: {
      type: "array",
      items: {
        type: "object",
        properties: {
          firstName: {
            type: "string",
            nullable: true,
          },
          lastName: {
            type: "string",
            nullable: true,
          },
          travelDocumentNumber: {
            type: "string",
            nullable: true,
          },
          birthDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          issueDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          expirationDate: {
            type: "string",
            format: "date-time",
          },
          residenceCountryCode2: {
            maxLength: 2,
            minLength: 2,
            type: "string",
            nullable: true,
          },
          nationalityCountryCode2: {
            maxLength: 2,
            minLength: 2,
            type: "string",
            nullable: true,
          },
          identificationType: {
            enum: ["IdCard", "Passport"],
            type: "string",
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    addresses: {
      type: "array",
      items: {
        type: "object",
        properties: {
          fullAddress: {
            maxLength: 255,
            minLength: 0,
            type: "string",
            nullable: true,
          },
          isPrimary: {
            type: "boolean",
          },
          type: {
            enum: ["HOME", "OFFICE"],
            type: "string",
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    telephones: {
      type: "array",
      items: {
        type: "object",
        properties: {
          ituCountryCode: {
            maxLength: 255,
            minLength: 0,
            type: "string",
            nullable: true,
          },
          areaCode: {
            maxLength: 255,
            minLength: 0,
            type: "string",
            nullable: true,
          },
          localNumber: {
            maxLength: 255,
            minLength: 0,
            type: "string",
            nullable: true,
          },
          isPrimary: {
            type: "boolean",
          },
          type: {
            enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
            type: "string",
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    emails: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
            nullable: true,
          },
          emailAddress: {
            maxLength: 255,
            minLength: 0,
            type: "string",
            format: "email",
            nullable: true,
          },
          isPrimary: {
            type: "boolean",
          },
          type: {
            enum: ["WORK", "PERSONAL"],
            type: "string",
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_TravellerDetailProfileDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nationalityCountryCode2: {
      type: "string",
      nullable: true,
    },
    nationalityCountryName: {
      type: "string",
      nullable: true,
    },
    languagePreferenceCultureName: {
      type: "string",
      nullable: true,
    },
    gender: {
      enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
      type: "string",
    },
    userAccountId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    hasUserAccount: {
      type: "boolean",
      readOnly: true,
    },
    travellerDocuments: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            format: "uuid",
          },
          travelDocumentNumber: {
            type: "string",
            nullable: true,
          },
          residenceCountryCode2: {
            type: "string",
            nullable: true,
          },
          residenceCountryName: {
            type: "string",
            nullable: true,
          },
          nationalityCountryCode2: {
            type: "string",
            nullable: true,
          },
          nationalityCountryName: {
            type: "string",
            nullable: true,
          },
          firstName: {
            type: "string",
            nullable: true,
          },
          lastName: {
            type: "string",
            nullable: true,
          },
          fullName: {
            type: "string",
            nullable: true,
            readOnly: true,
          },
          birthDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          issueDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          expirationDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          identificationType: {
            enum: ["IdCard", "Passport"],
            type: "string",
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    primaryAddress: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        fullAddress: {
          type: "string",
          nullable: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["HOME", "OFFICE"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    primaryEmail: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        emailAddress: {
          type: "string",
          nullable: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["WORK", "PERSONAL"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    primaryTelephone: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        ituCountryCode: {
          type: "string",
          nullable: true,
        },
        areaCode: {
          type: "string",
          nullable: true,
        },
        localNumber: {
          type: "string",
          nullable: true,
        },
        fullNumber: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_TravellerDocumentNumberDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_TravellerDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    travellerDocuments: {
      type: "array",
      items: {
        type: "object",
        properties: {
          travellerId: {
            type: "string",
            format: "uuid",
          },
          firstName: {
            type: "string",
            nullable: true,
          },
          lastName: {
            type: "string",
            nullable: true,
          },
          fullName: {
            type: "string",
            nullable: true,
            readOnly: true,
          },
          travelDocumentNumber: {
            type: "string",
            nullable: true,
          },
          birthDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          issueDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          expirationDate: {
            type: "string",
            format: "date-time",
            nullable: true,
          },
          identificationType: {
            enum: ["IdCard", "Passport"],
            type: "string",
          },
          residenceCountryCode2: {
            type: "string",
            nullable: true,
          },
          nationalityCountryCode2: {
            type: "string",
            nullable: true,
          },
          residenceCountryName: {
            type: "string",
            nullable: true,
          },
          nationalityCountryName: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_TravellerInfoForPaymentDto = {
  type: "object",
  properties: {
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    fullName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    primaryAddress: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        fullAddress: {
          type: "string",
          nullable: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["HOME", "OFFICE"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    primaryEmail: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        emailAddress: {
          type: "string",
          nullable: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["WORK", "PERSONAL"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
    primaryTelephone: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
        },
        ituCountryCode: {
          type: "string",
          nullable: true,
        },
        areaCode: {
          type: "string",
          nullable: true,
        },
        localNumber: {
          type: "string",
          nullable: true,
        },
        fullNumber: {
          type: "string",
          nullable: true,
          readOnly: true,
        },
        isPrimary: {
          type: "boolean",
        },
        type: {
          enum: ["HOME", "OFFICE", "MOBILE", "FAX"],
          type: "string",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_TravellerListDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    fullName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nationalityCountryCode2: {
      type: "string",
      nullable: true,
    },
    nationalityCountryName: {
      type: "string",
      nullable: true,
    },
    languagePreferenceCultureName: {
      type: "string",
      nullable: true,
    },
    gender: {
      enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
      type: "string",
    },
    identificationType: {
      enum: ["IdCard", "Passport"],
      type: "string",
    },
    userAccountId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    hasUserAccount: {
      type: "boolean",
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_UpdateTravellerDto = {
  type: "object",
  properties: {
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
      readOnly: true,
    },
    firstName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    lastName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    nationalityCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    languagePreferenceCultureName: {
      maxLength: 255,
      minLength: 0,
      type: "string",
      nullable: true,
    },
    gender: {
      enum: ["MALE", "FEMALE", "OTHER", "NOTSPECIFIED"],
      type: "string",
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_UpsertTravellerDocumentDto = {
  type: "object",
  properties: {
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
      readOnly: true,
    },
    id: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
    nationalityCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    firstName: {
      type: "string",
      nullable: true,
    },
    lastName: {
      type: "string",
      nullable: true,
    },
    residenceCountryCode2: {
      maxLength: 2,
      minLength: 2,
      type: "string",
      nullable: true,
    },
    expirationDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    birthDate: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    creatorId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $UniRefund_TravellerService_Travellers_UpsertTravellerDocumentResponseDto = {
  type: "object",
  properties: {
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
      readOnly: true,
    },
    id: {
      type: "string",
      format: "uuid",
    },
    travelDocumentNumber: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationAuthConfigurationDto = {
  type: "object",
  properties: {
    grantedPolicies: {
      type: "object",
      additionalProperties: {
        type: "boolean",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationConfigurationDto = {
  type: "object",
  properties: {
    localization: {
      type: "object",
      properties: {
        values: {
          type: "object",
          additionalProperties: {
            type: "object",
            additionalProperties: {
              type: "string",
            },
          },
          nullable: true,
        },
        resources: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              texts: {
                type: "object",
                additionalProperties: {
                  type: "string",
                },
                nullable: true,
              },
              baseResources: {
                type: "array",
                items: {
                  type: "string",
                },
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        languages: {
          type: "array",
          items: {
            type: "object",
            properties: {
              cultureName: {
                type: "string",
                nullable: true,
              },
              uiCultureName: {
                type: "string",
                nullable: true,
              },
              displayName: {
                type: "string",
                nullable: true,
              },
              twoLetterISOLanguageName: {
                type: "string",
                nullable: true,
                readOnly: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        currentCulture: {
          type: "object",
          properties: {
            displayName: {
              type: "string",
              nullable: true,
            },
            englishName: {
              type: "string",
              nullable: true,
            },
            threeLetterIsoLanguageName: {
              type: "string",
              nullable: true,
            },
            twoLetterIsoLanguageName: {
              type: "string",
              nullable: true,
            },
            isRightToLeft: {
              type: "boolean",
            },
            cultureName: {
              type: "string",
              nullable: true,
            },
            name: {
              type: "string",
              nullable: true,
            },
            nativeName: {
              type: "string",
              nullable: true,
            },
            dateTimeFormat: {
              type: "object",
              properties: {
                calendarAlgorithmType: {
                  type: "string",
                  nullable: true,
                },
                dateTimeFormatLong: {
                  type: "string",
                  nullable: true,
                },
                shortDatePattern: {
                  type: "string",
                  nullable: true,
                },
                fullDateTimePattern: {
                  type: "string",
                  nullable: true,
                },
                dateSeparator: {
                  type: "string",
                  nullable: true,
                },
                shortTimePattern: {
                  type: "string",
                  nullable: true,
                },
                longTimePattern: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          additionalProperties: false,
        },
        defaultResourceName: {
          type: "string",
          nullable: true,
        },
        languagesMap: {
          type: "object",
          additionalProperties: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                value: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          nullable: true,
        },
        languageFilesMap: {
          type: "object",
          additionalProperties: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                value: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    auth: {
      type: "object",
      properties: {
        grantedPolicies: {
          type: "object",
          additionalProperties: {
            type: "boolean",
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    setting: {
      type: "object",
      properties: {
        values: {
          type: "object",
          additionalProperties: {
            type: "string",
            nullable: true,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    currentUser: {
      type: "object",
      properties: {
        isAuthenticated: {
          type: "boolean",
        },
        id: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        tenantId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        impersonatorUserId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        impersonatorTenantId: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        impersonatorUserName: {
          type: "string",
          nullable: true,
        },
        impersonatorTenantName: {
          type: "string",
          nullable: true,
        },
        userName: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        surName: {
          type: "string",
          nullable: true,
        },
        email: {
          type: "string",
          nullable: true,
        },
        emailVerified: {
          type: "boolean",
        },
        phoneNumber: {
          type: "string",
          nullable: true,
        },
        phoneNumberVerified: {
          type: "boolean",
        },
        roles: {
          type: "array",
          items: {
            type: "string",
          },
          nullable: true,
        },
        sessionId: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    features: {
      type: "object",
      properties: {
        values: {
          type: "object",
          additionalProperties: {
            type: "string",
            nullable: true,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    globalFeatures: {
      type: "object",
      properties: {
        enabledFeatures: {
          uniqueItems: true,
          type: "array",
          items: {
            type: "string",
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    multiTenancy: {
      type: "object",
      properties: {
        isEnabled: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    currentTenant: {
      type: "object",
      properties: {
        id: {
          type: "string",
          format: "uuid",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    timing: {
      type: "object",
      properties: {
        timeZone: {
          type: "object",
          properties: {
            iana: {
              type: "object",
              properties: {
                timeZoneName: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            windows: {
              type: "object",
              properties: {
                timeZoneId: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    clock: {
      type: "object",
      properties: {
        kind: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    objectExtensions: {
      type: "object",
      properties: {
        modules: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              entities: {
                type: "object",
                additionalProperties: {
                  type: "object",
                  properties: {
                    properties: {
                      type: "object",
                      additionalProperties: {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            nullable: true,
                          },
                          typeSimple: {
                            type: "string",
                            nullable: true,
                          },
                          displayName: {
                            type: "object",
                            properties: {
                              name: {
                                type: "string",
                                nullable: true,
                              },
                              resource: {
                                type: "string",
                                nullable: true,
                              },
                            },
                            additionalProperties: false,
                          },
                          api: {
                            type: "object",
                            properties: {
                              onGet: {
                                type: "object",
                                properties: {
                                  isAvailable: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onCreate: {
                                type: "object",
                                properties: {
                                  isAvailable: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onUpdate: {
                                type: "object",
                                properties: {
                                  isAvailable: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                            },
                            additionalProperties: false,
                          },
                          ui: {
                            type: "object",
                            properties: {
                              onTable: {
                                type: "object",
                                properties: {
                                  isVisible: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onCreateForm: {
                                type: "object",
                                properties: {
                                  isVisible: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              onEditForm: {
                                type: "object",
                                properties: {
                                  isVisible: {
                                    type: "boolean",
                                  },
                                },
                                additionalProperties: false,
                              },
                              lookup: {
                                type: "object",
                                properties: {
                                  url: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  resultListPropertyName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  displayPropertyName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  valuePropertyName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  filterParamName: {
                                    type: "string",
                                    nullable: true,
                                  },
                                },
                                additionalProperties: false,
                              },
                            },
                            additionalProperties: false,
                          },
                          attributes: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                typeSimple: {
                                  type: "string",
                                  nullable: true,
                                },
                                config: {
                                  type: "object",
                                  additionalProperties: {},
                                  nullable: true,
                                },
                              },
                              additionalProperties: false,
                            },
                            nullable: true,
                          },
                          configuration: {
                            type: "object",
                            additionalProperties: {},
                            nullable: true,
                          },
                          defaultValue: {
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                      nullable: true,
                    },
                    configuration: {
                      type: "object",
                      additionalProperties: {},
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                nullable: true,
              },
              configuration: {
                type: "object",
                additionalProperties: {},
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
        enums: {
          type: "object",
          additionalProperties: {
            type: "object",
            properties: {
              fields: {
                type: "array",
                items: {
                  type: "object",
                  properties: {
                    name: {
                      type: "string",
                      nullable: true,
                    },
                    value: {
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                nullable: true,
              },
              localizationResource: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    extraProperties: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationFeatureConfigurationDto = {
  type: "object",
  properties: {
    values: {
      type: "object",
      additionalProperties: {
        type: "string",
        nullable: true,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationGlobalFeatureConfigurationDto = {
  type: "object",
  properties: {
    enabledFeatures: {
      uniqueItems: true,
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationConfigurationDto = {
  type: "object",
  properties: {
    values: {
      type: "object",
      additionalProperties: {
        type: "object",
        additionalProperties: {
          type: "string",
        },
      },
      nullable: true,
    },
    resources: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          texts: {
            type: "object",
            additionalProperties: {
              type: "string",
            },
            nullable: true,
          },
          baseResources: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    languages: {
      type: "array",
      items: {
        type: "object",
        properties: {
          cultureName: {
            type: "string",
            nullable: true,
          },
          uiCultureName: {
            type: "string",
            nullable: true,
          },
          displayName: {
            type: "string",
            nullable: true,
          },
          twoLetterISOLanguageName: {
            type: "string",
            nullable: true,
            readOnly: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    currentCulture: {
      type: "object",
      properties: {
        displayName: {
          type: "string",
          nullable: true,
        },
        englishName: {
          type: "string",
          nullable: true,
        },
        threeLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        twoLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        isRightToLeft: {
          type: "boolean",
        },
        cultureName: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        nativeName: {
          type: "string",
          nullable: true,
        },
        dateTimeFormat: {
          type: "object",
          properties: {
            calendarAlgorithmType: {
              type: "string",
              nullable: true,
            },
            dateTimeFormatLong: {
              type: "string",
              nullable: true,
            },
            shortDatePattern: {
              type: "string",
              nullable: true,
            },
            fullDateTimePattern: {
              type: "string",
              nullable: true,
            },
            dateSeparator: {
              type: "string",
              nullable: true,
            },
            shortTimePattern: {
              type: "string",
              nullable: true,
            },
            longTimePattern: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    defaultResourceName: {
      type: "string",
      nullable: true,
    },
    languagesMap: {
      type: "object",
      additionalProperties: {
        type: "array",
        items: {
          type: "object",
          properties: {
            name: {
              type: "string",
              nullable: true,
            },
            value: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      nullable: true,
    },
    languageFilesMap: {
      type: "object",
      additionalProperties: {
        type: "array",
        items: {
          type: "object",
          properties: {
            name: {
              type: "string",
              nullable: true,
            },
            value: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationDto = {
  type: "object",
  properties: {
    resources: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          texts: {
            type: "object",
            additionalProperties: {
              type: "string",
            },
            nullable: true,
          },
          baseResources: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    currentCulture: {
      type: "object",
      properties: {
        displayName: {
          type: "string",
          nullable: true,
        },
        englishName: {
          type: "string",
          nullable: true,
        },
        threeLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        twoLetterIsoLanguageName: {
          type: "string",
          nullable: true,
        },
        isRightToLeft: {
          type: "boolean",
        },
        cultureName: {
          type: "string",
          nullable: true,
        },
        name: {
          type: "string",
          nullable: true,
        },
        nativeName: {
          type: "string",
          nullable: true,
        },
        dateTimeFormat: {
          type: "object",
          properties: {
            calendarAlgorithmType: {
              type: "string",
              nullable: true,
            },
            dateTimeFormatLong: {
              type: "string",
              nullable: true,
            },
            shortDatePattern: {
              type: "string",
              nullable: true,
            },
            fullDateTimePattern: {
              type: "string",
              nullable: true,
            },
            dateSeparator: {
              type: "string",
              nullable: true,
            },
            shortTimePattern: {
              type: "string",
              nullable: true,
            },
            longTimePattern: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationLocalizationResourceDto = {
  type: "object",
  properties: {
    texts: {
      type: "object",
      additionalProperties: {
        type: "string",
      },
      nullable: true,
    },
    baseResources: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ApplicationSettingConfigurationDto = {
  type: "object",
  properties: {
    values: {
      type: "object",
      additionalProperties: {
        type: "string",
        nullable: true,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ClockDto = {
  type: "object",
  properties: {
    kind: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentCultureDto = {
  type: "object",
  properties: {
    displayName: {
      type: "string",
      nullable: true,
    },
    englishName: {
      type: "string",
      nullable: true,
    },
    threeLetterIsoLanguageName: {
      type: "string",
      nullable: true,
    },
    twoLetterIsoLanguageName: {
      type: "string",
      nullable: true,
    },
    isRightToLeft: {
      type: "boolean",
    },
    cultureName: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    nativeName: {
      type: "string",
      nullable: true,
    },
    dateTimeFormat: {
      type: "object",
      properties: {
        calendarAlgorithmType: {
          type: "string",
          nullable: true,
        },
        dateTimeFormatLong: {
          type: "string",
          nullable: true,
        },
        shortDatePattern: {
          type: "string",
          nullable: true,
        },
        fullDateTimePattern: {
          type: "string",
          nullable: true,
        },
        dateSeparator: {
          type: "string",
          nullable: true,
        },
        shortTimePattern: {
          type: "string",
          nullable: true,
        },
        longTimePattern: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_CurrentUserDto = {
  type: "object",
  properties: {
    isAuthenticated: {
      type: "boolean",
    },
    id: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    tenantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    impersonatorUserId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    impersonatorTenantId: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    impersonatorUserName: {
      type: "string",
      nullable: true,
    },
    impersonatorTenantName: {
      type: "string",
      nullable: true,
    },
    userName: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    surName: {
      type: "string",
      nullable: true,
    },
    email: {
      type: "string",
      nullable: true,
    },
    emailVerified: {
      type: "boolean",
    },
    phoneNumber: {
      type: "string",
      nullable: true,
    },
    phoneNumberVerified: {
      type: "boolean",
    },
    roles: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    sessionId: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_DateTimeFormatDto = {
  type: "object",
  properties: {
    calendarAlgorithmType: {
      type: "string",
      nullable: true,
    },
    dateTimeFormatLong: {
      type: "string",
      nullable: true,
    },
    shortDatePattern: {
      type: "string",
      nullable: true,
    },
    fullDateTimePattern: {
      type: "string",
      nullable: true,
    },
    dateSeparator: {
      type: "string",
      nullable: true,
    },
    shortTimePattern: {
      type: "string",
      nullable: true,
    },
    longTimePattern: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_IanaTimeZone = {
  type: "object",
  properties: {
    timeZoneName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_EntityExtensionDto = {
  type: "object",
  properties: {
    properties: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          displayName: {
            type: "object",
            properties: {
              name: {
                type: "string",
                nullable: true,
              },
              resource: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          api: {
            type: "object",
            properties: {
              onGet: {
                type: "object",
                properties: {
                  isAvailable: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onCreate: {
                type: "object",
                properties: {
                  isAvailable: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onUpdate: {
                type: "object",
                properties: {
                  isAvailable: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
            },
            additionalProperties: false,
          },
          ui: {
            type: "object",
            properties: {
              onTable: {
                type: "object",
                properties: {
                  isVisible: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onCreateForm: {
                type: "object",
                properties: {
                  isVisible: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              onEditForm: {
                type: "object",
                properties: {
                  isVisible: {
                    type: "boolean",
                  },
                },
                additionalProperties: false,
              },
              lookup: {
                type: "object",
                properties: {
                  url: {
                    type: "string",
                    nullable: true,
                  },
                  resultListPropertyName: {
                    type: "string",
                    nullable: true,
                  },
                  displayPropertyName: {
                    type: "string",
                    nullable: true,
                  },
                  valuePropertyName: {
                    type: "string",
                    nullable: true,
                  },
                  filterParamName: {
                    type: "string",
                    nullable: true,
                  },
                },
                additionalProperties: false,
              },
            },
            additionalProperties: false,
          },
          attributes: {
            type: "array",
            items: {
              type: "object",
              properties: {
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                config: {
                  type: "object",
                  additionalProperties: {},
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          configuration: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
          defaultValue: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    configuration: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumDto = {
  type: "object",
  properties: {
    fields: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          value: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    localizationResource: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionEnumFieldDto = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    value: {
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiCreateDto = {
  type: "object",
  properties: {
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiDto = {
  type: "object",
  properties: {
    onGet: {
      type: "object",
      properties: {
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onCreate: {
      type: "object",
      properties: {
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onUpdate: {
      type: "object",
      properties: {
        isAvailable: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiGetDto = {
  type: "object",
  properties: {
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyApiUpdateDto = {
  type: "object",
  properties: {
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyAttributeDto = {
  type: "object",
  properties: {
    typeSimple: {
      type: "string",
      nullable: true,
    },
    config: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyDto = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    displayName: {
      type: "object",
      properties: {
        name: {
          type: "string",
          nullable: true,
        },
        resource: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    api: {
      type: "object",
      properties: {
        onGet: {
          type: "object",
          properties: {
            isAvailable: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onCreate: {
          type: "object",
          properties: {
            isAvailable: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onUpdate: {
          type: "object",
          properties: {
            isAvailable: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    ui: {
      type: "object",
      properties: {
        onTable: {
          type: "object",
          properties: {
            isVisible: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onCreateForm: {
          type: "object",
          properties: {
            isVisible: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        onEditForm: {
          type: "object",
          properties: {
            isVisible: {
              type: "boolean",
            },
          },
          additionalProperties: false,
        },
        lookup: {
          type: "object",
          properties: {
            url: {
              type: "string",
              nullable: true,
            },
            resultListPropertyName: {
              type: "string",
              nullable: true,
            },
            displayPropertyName: {
              type: "string",
              nullable: true,
            },
            valuePropertyName: {
              type: "string",
              nullable: true,
            },
            filterParamName: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
    attributes: {
      type: "array",
      items: {
        type: "object",
        properties: {
          typeSimple: {
            type: "string",
            nullable: true,
          },
          config: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    configuration: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
    defaultValue: {
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiDto = {
  type: "object",
  properties: {
    onTable: {
      type: "object",
      properties: {
        isVisible: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onCreateForm: {
      type: "object",
      properties: {
        isVisible: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    onEditForm: {
      type: "object",
      properties: {
        isVisible: {
          type: "boolean",
        },
      },
      additionalProperties: false,
    },
    lookup: {
      type: "object",
      properties: {
        url: {
          type: "string",
          nullable: true,
        },
        resultListPropertyName: {
          type: "string",
          nullable: true,
        },
        displayPropertyName: {
          type: "string",
          nullable: true,
        },
        valuePropertyName: {
          type: "string",
          nullable: true,
        },
        filterParamName: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiFormDto = {
  type: "object",
  properties: {
    isVisible: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiLookupDto = {
  type: "object",
  properties: {
    url: {
      type: "string",
      nullable: true,
    },
    resultListPropertyName: {
      type: "string",
      nullable: true,
    },
    displayPropertyName: {
      type: "string",
      nullable: true,
    },
    valuePropertyName: {
      type: "string",
      nullable: true,
    },
    filterParamName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ExtensionPropertyUiTableDto = {
  type: "object",
  properties: {
    isVisible: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_LocalizableStringDto = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    resource: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ModuleExtensionDto = {
  type: "object",
  properties: {
    entities: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          properties: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                displayName: {
                  type: "object",
                  properties: {
                    name: {
                      type: "string",
                      nullable: true,
                    },
                    resource: {
                      type: "string",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                api: {
                  type: "object",
                  properties: {
                    onGet: {
                      type: "object",
                      properties: {
                        isAvailable: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onCreate: {
                      type: "object",
                      properties: {
                        isAvailable: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onUpdate: {
                      type: "object",
                      properties: {
                        isAvailable: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                ui: {
                  type: "object",
                  properties: {
                    onTable: {
                      type: "object",
                      properties: {
                        isVisible: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onCreateForm: {
                      type: "object",
                      properties: {
                        isVisible: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    onEditForm: {
                      type: "object",
                      properties: {
                        isVisible: {
                          type: "boolean",
                        },
                      },
                      additionalProperties: false,
                    },
                    lookup: {
                      type: "object",
                      properties: {
                        url: {
                          type: "string",
                          nullable: true,
                        },
                        resultListPropertyName: {
                          type: "string",
                          nullable: true,
                        },
                        displayPropertyName: {
                          type: "string",
                          nullable: true,
                        },
                        valuePropertyName: {
                          type: "string",
                          nullable: true,
                        },
                        filterParamName: {
                          type: "string",
                          nullable: true,
                        },
                      },
                      additionalProperties: false,
                    },
                  },
                  additionalProperties: false,
                },
                attributes: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      config: {
                        type: "object",
                        additionalProperties: {},
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                configuration: {
                  type: "object",
                  additionalProperties: {},
                  nullable: true,
                },
                defaultValue: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          configuration: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    configuration: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_ObjectExtending_ObjectExtensionsDto = {
  type: "object",
  properties: {
    modules: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          entities: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                properties: {
                  type: "object",
                  additionalProperties: {
                    type: "object",
                    properties: {
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      displayName: {
                        type: "object",
                        properties: {
                          name: {
                            type: "string",
                            nullable: true,
                          },
                          resource: {
                            type: "string",
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                      api: {
                        type: "object",
                        properties: {
                          onGet: {
                            type: "object",
                            properties: {
                              isAvailable: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onCreate: {
                            type: "object",
                            properties: {
                              isAvailable: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onUpdate: {
                            type: "object",
                            properties: {
                              isAvailable: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                        },
                        additionalProperties: false,
                      },
                      ui: {
                        type: "object",
                        properties: {
                          onTable: {
                            type: "object",
                            properties: {
                              isVisible: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onCreateForm: {
                            type: "object",
                            properties: {
                              isVisible: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          onEditForm: {
                            type: "object",
                            properties: {
                              isVisible: {
                                type: "boolean",
                              },
                            },
                            additionalProperties: false,
                          },
                          lookup: {
                            type: "object",
                            properties: {
                              url: {
                                type: "string",
                                nullable: true,
                              },
                              resultListPropertyName: {
                                type: "string",
                                nullable: true,
                              },
                              displayPropertyName: {
                                type: "string",
                                nullable: true,
                              },
                              valuePropertyName: {
                                type: "string",
                                nullable: true,
                              },
                              filterParamName: {
                                type: "string",
                                nullable: true,
                              },
                            },
                            additionalProperties: false,
                          },
                        },
                        additionalProperties: false,
                      },
                      attributes: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            config: {
                              type: "object",
                              additionalProperties: {},
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      configuration: {
                        type: "object",
                        additionalProperties: {},
                        nullable: true,
                      },
                      defaultValue: {
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                configuration: {
                  type: "object",
                  additionalProperties: {},
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          configuration: {
            type: "object",
            additionalProperties: {},
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    enums: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          fields: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                value: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          localizationResource: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimeZone = {
  type: "object",
  properties: {
    iana: {
      type: "object",
      properties: {
        timeZoneName: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    windows: {
      type: "object",
      properties: {
        timeZoneId: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_TimingDto = {
  type: "object",
  properties: {
    timeZone: {
      type: "object",
      properties: {
        iana: {
          type: "object",
          properties: {
            timeZoneName: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
        windows: {
          type: "object",
          properties: {
            timeZoneId: {
              type: "string",
              nullable: true,
            },
          },
          additionalProperties: false,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_ApplicationConfigurations_WindowsTimeZone = {
  type: "object",
  properties: {
    timeZoneId: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_MultiTenancy_CurrentTenantDto = {
  type: "object",
  properties: {
    id: {
      type: "string",
      format: "uuid",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    isAvailable: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_AspNetCore_Mvc_MultiTenancy_MultiTenancyInfoDto = {
  type: "object",
  properties: {
    isEnabled: {
      type: "boolean",
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ActionApiDescriptionModel = {
  type: "object",
  properties: {
    uniqueName: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    httpMethod: {
      type: "string",
      nullable: true,
    },
    url: {
      type: "string",
      nullable: true,
    },
    supportedVersions: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    parametersOnMethod: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          typeAsString: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isOptional: {
            type: "boolean",
          },
          defaultValue: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    parameters: {
      type: "array",
      items: {
        type: "object",
        properties: {
          nameOnMethod: {
            type: "string",
            nullable: true,
          },
          name: {
            type: "string",
            nullable: true,
          },
          jsonName: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isOptional: {
            type: "boolean",
          },
          defaultValue: {
            nullable: true,
          },
          constraintTypes: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          bindingSourceId: {
            type: "string",
            nullable: true,
          },
          descriptorName: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    returnValue: {
      type: "object",
      properties: {
        type: {
          type: "string",
          nullable: true,
        },
        typeSimple: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
    allowAnonymous: {
      type: "boolean",
      nullable: true,
    },
    implementFrom: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ApplicationApiDescriptionModel = {
  type: "object",
  properties: {
    modules: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          rootPath: {
            type: "string",
            nullable: true,
          },
          remoteServiceName: {
            type: "string",
            nullable: true,
          },
          controllers: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                controllerName: {
                  type: "string",
                  nullable: true,
                },
                controllerGroupName: {
                  type: "string",
                  nullable: true,
                },
                isRemoteService: {
                  type: "boolean",
                },
                isIntegrationService: {
                  type: "boolean",
                },
                apiVersion: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                interfaces: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      methods: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            parametersOnMethod: {
                              type: "array",
                              items: {
                                type: "object",
                                properties: {
                                  name: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  typeAsString: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  type: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  typeSimple: {
                                    type: "string",
                                    nullable: true,
                                  },
                                  isOptional: {
                                    type: "boolean",
                                  },
                                  defaultValue: {
                                    nullable: true,
                                  },
                                },
                                additionalProperties: false,
                              },
                              nullable: true,
                            },
                            returnValue: {
                              type: "object",
                              properties: {
                                type: {
                                  type: "string",
                                  nullable: true,
                                },
                                typeSimple: {
                                  type: "string",
                                  nullable: true,
                                },
                              },
                              additionalProperties: false,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                actions: {
                  type: "object",
                  additionalProperties: {
                    type: "object",
                    properties: {
                      uniqueName: {
                        type: "string",
                        nullable: true,
                      },
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      httpMethod: {
                        type: "string",
                        nullable: true,
                      },
                      url: {
                        type: "string",
                        nullable: true,
                      },
                      supportedVersions: {
                        type: "array",
                        items: {
                          type: "string",
                        },
                        nullable: true,
                      },
                      parametersOnMethod: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            typeAsString: {
                              type: "string",
                              nullable: true,
                            },
                            type: {
                              type: "string",
                              nullable: true,
                            },
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            isOptional: {
                              type: "boolean",
                            },
                            defaultValue: {
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      parameters: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            nameOnMethod: {
                              type: "string",
                              nullable: true,
                            },
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            jsonName: {
                              type: "string",
                              nullable: true,
                            },
                            type: {
                              type: "string",
                              nullable: true,
                            },
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            isOptional: {
                              type: "boolean",
                            },
                            defaultValue: {
                              nullable: true,
                            },
                            constraintTypes: {
                              type: "array",
                              items: {
                                type: "string",
                              },
                              nullable: true,
                            },
                            bindingSourceId: {
                              type: "string",
                              nullable: true,
                            },
                            descriptorName: {
                              type: "string",
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      returnValue: {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            nullable: true,
                          },
                          typeSimple: {
                            type: "string",
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                      allowAnonymous: {
                        type: "boolean",
                        nullable: true,
                      },
                      implementFrom: {
                        type: "string",
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    types: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          baseType: {
            type: "string",
            nullable: true,
          },
          isEnum: {
            type: "boolean",
          },
          enumNames: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          enumValues: {
            type: "array",
            items: {},
            nullable: true,
          },
          genericArguments: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          properties: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                jsonName: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isRequired: {
                  type: "boolean",
                },
                minLength: {
                  type: "integer",
                  format: "int32",
                  nullable: true,
                },
                maxLength: {
                  type: "integer",
                  format: "int32",
                  nullable: true,
                },
                minimum: {
                  type: "string",
                  nullable: true,
                },
                maximum: {
                  type: "string",
                  nullable: true,
                },
                regex: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ControllerApiDescriptionModel = {
  type: "object",
  properties: {
    controllerName: {
      type: "string",
      nullable: true,
    },
    controllerGroupName: {
      type: "string",
      nullable: true,
    },
    isRemoteService: {
      type: "boolean",
    },
    isIntegrationService: {
      type: "boolean",
    },
    apiVersion: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    interfaces: {
      type: "array",
      items: {
        type: "object",
        properties: {
          type: {
            type: "string",
            nullable: true,
          },
          name: {
            type: "string",
            nullable: true,
          },
          methods: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                parametersOnMethod: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      typeAsString: {
                        type: "string",
                        nullable: true,
                      },
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      isOptional: {
                        type: "boolean",
                      },
                      defaultValue: {
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                returnValue: {
                  type: "object",
                  properties: {
                    type: {
                      type: "string",
                      nullable: true,
                    },
                    typeSimple: {
                      type: "string",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    actions: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          uniqueName: {
            type: "string",
            nullable: true,
          },
          name: {
            type: "string",
            nullable: true,
          },
          httpMethod: {
            type: "string",
            nullable: true,
          },
          url: {
            type: "string",
            nullable: true,
          },
          supportedVersions: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
          parametersOnMethod: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                typeAsString: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isOptional: {
                  type: "boolean",
                },
                defaultValue: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          parameters: {
            type: "array",
            items: {
              type: "object",
              properties: {
                nameOnMethod: {
                  type: "string",
                  nullable: true,
                },
                name: {
                  type: "string",
                  nullable: true,
                },
                jsonName: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isOptional: {
                  type: "boolean",
                },
                defaultValue: {
                  nullable: true,
                },
                constraintTypes: {
                  type: "array",
                  items: {
                    type: "string",
                  },
                  nullable: true,
                },
                bindingSourceId: {
                  type: "string",
                  nullable: true,
                },
                descriptorName: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          returnValue: {
            type: "object",
            properties: {
              type: {
                type: "string",
                nullable: true,
              },
              typeSimple: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          allowAnonymous: {
            type: "boolean",
            nullable: true,
          },
          implementFrom: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ControllerInterfaceApiDescriptionModel = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    methods: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          parametersOnMethod: {
            type: "array",
            items: {
              type: "object",
              properties: {
                name: {
                  type: "string",
                  nullable: true,
                },
                typeAsString: {
                  type: "string",
                  nullable: true,
                },
                type: {
                  type: "string",
                  nullable: true,
                },
                typeSimple: {
                  type: "string",
                  nullable: true,
                },
                isOptional: {
                  type: "boolean",
                },
                defaultValue: {
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          returnValue: {
            type: "object",
            properties: {
              type: {
                type: "string",
                nullable: true,
              },
              typeSimple: {
                type: "string",
                nullable: true,
              },
            },
            additionalProperties: false,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_InterfaceMethodApiDescriptionModel = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    parametersOnMethod: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          typeAsString: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isOptional: {
            type: "boolean",
          },
          defaultValue: {
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
    returnValue: {
      type: "object",
      properties: {
        type: {
          type: "string",
          nullable: true,
        },
        typeSimple: {
          type: "string",
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_MethodParameterApiDescriptionModel = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    typeAsString: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    isOptional: {
      type: "boolean",
    },
    defaultValue: {
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ModuleApiDescriptionModel = {
  type: "object",
  properties: {
    rootPath: {
      type: "string",
      nullable: true,
    },
    remoteServiceName: {
      type: "string",
      nullable: true,
    },
    controllers: {
      type: "object",
      additionalProperties: {
        type: "object",
        properties: {
          controllerName: {
            type: "string",
            nullable: true,
          },
          controllerGroupName: {
            type: "string",
            nullable: true,
          },
          isRemoteService: {
            type: "boolean",
          },
          isIntegrationService: {
            type: "boolean",
          },
          apiVersion: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          interfaces: {
            type: "array",
            items: {
              type: "object",
              properties: {
                type: {
                  type: "string",
                  nullable: true,
                },
                name: {
                  type: "string",
                  nullable: true,
                },
                methods: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      parametersOnMethod: {
                        type: "array",
                        items: {
                          type: "object",
                          properties: {
                            name: {
                              type: "string",
                              nullable: true,
                            },
                            typeAsString: {
                              type: "string",
                              nullable: true,
                            },
                            type: {
                              type: "string",
                              nullable: true,
                            },
                            typeSimple: {
                              type: "string",
                              nullable: true,
                            },
                            isOptional: {
                              type: "boolean",
                            },
                            defaultValue: {
                              nullable: true,
                            },
                          },
                          additionalProperties: false,
                        },
                        nullable: true,
                      },
                      returnValue: {
                        type: "object",
                        properties: {
                          type: {
                            type: "string",
                            nullable: true,
                          },
                          typeSimple: {
                            type: "string",
                            nullable: true,
                          },
                        },
                        additionalProperties: false,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
          actions: {
            type: "object",
            additionalProperties: {
              type: "object",
              properties: {
                uniqueName: {
                  type: "string",
                  nullable: true,
                },
                name: {
                  type: "string",
                  nullable: true,
                },
                httpMethod: {
                  type: "string",
                  nullable: true,
                },
                url: {
                  type: "string",
                  nullable: true,
                },
                supportedVersions: {
                  type: "array",
                  items: {
                    type: "string",
                  },
                  nullable: true,
                },
                parametersOnMethod: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      typeAsString: {
                        type: "string",
                        nullable: true,
                      },
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      isOptional: {
                        type: "boolean",
                      },
                      defaultValue: {
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                parameters: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      nameOnMethod: {
                        type: "string",
                        nullable: true,
                      },
                      name: {
                        type: "string",
                        nullable: true,
                      },
                      jsonName: {
                        type: "string",
                        nullable: true,
                      },
                      type: {
                        type: "string",
                        nullable: true,
                      },
                      typeSimple: {
                        type: "string",
                        nullable: true,
                      },
                      isOptional: {
                        type: "boolean",
                      },
                      defaultValue: {
                        nullable: true,
                      },
                      constraintTypes: {
                        type: "array",
                        items: {
                          type: "string",
                        },
                        nullable: true,
                      },
                      bindingSourceId: {
                        type: "string",
                        nullable: true,
                      },
                      descriptorName: {
                        type: "string",
                        nullable: true,
                      },
                    },
                    additionalProperties: false,
                  },
                  nullable: true,
                },
                returnValue: {
                  type: "object",
                  properties: {
                    type: {
                      type: "string",
                      nullable: true,
                    },
                    typeSimple: {
                      type: "string",
                      nullable: true,
                    },
                  },
                  additionalProperties: false,
                },
                allowAnonymous: {
                  type: "boolean",
                  nullable: true,
                },
                implementFrom: {
                  type: "string",
                  nullable: true,
                },
              },
              additionalProperties: false,
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ParameterApiDescriptionModel = {
  type: "object",
  properties: {
    nameOnMethod: {
      type: "string",
      nullable: true,
    },
    name: {
      type: "string",
      nullable: true,
    },
    jsonName: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    isOptional: {
      type: "boolean",
    },
    defaultValue: {
      nullable: true,
    },
    constraintTypes: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    bindingSourceId: {
      type: "string",
      nullable: true,
    },
    descriptorName: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_PropertyApiDescriptionModel = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    jsonName: {
      type: "string",
      nullable: true,
    },
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
    isRequired: {
      type: "boolean",
    },
    minLength: {
      type: "integer",
      format: "int32",
      nullable: true,
    },
    maxLength: {
      type: "integer",
      format: "int32",
      nullable: true,
    },
    minimum: {
      type: "string",
      nullable: true,
    },
    maximum: {
      type: "string",
      nullable: true,
    },
    regex: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_ReturnValueApiDescriptionModel = {
  type: "object",
  properties: {
    type: {
      type: "string",
      nullable: true,
    },
    typeSimple: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_Modeling_TypeApiDescriptionModel = {
  type: "object",
  properties: {
    baseType: {
      type: "string",
      nullable: true,
    },
    isEnum: {
      type: "boolean",
    },
    enumNames: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    enumValues: {
      type: "array",
      items: {},
      nullable: true,
    },
    genericArguments: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
    properties: {
      type: "array",
      items: {
        type: "object",
        properties: {
          name: {
            type: "string",
            nullable: true,
          },
          jsonName: {
            type: "string",
            nullable: true,
          },
          type: {
            type: "string",
            nullable: true,
          },
          typeSimple: {
            type: "string",
            nullable: true,
          },
          isRequired: {
            type: "boolean",
          },
          minLength: {
            type: "integer",
            format: "int32",
            nullable: true,
          },
          maxLength: {
            type: "integer",
            format: "int32",
            nullable: true,
          },
          minimum: {
            type: "string",
            nullable: true,
          },
          maximum: {
            type: "string",
            nullable: true,
          },
          regex: {
            type: "string",
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_RemoteServiceErrorInfo = {
  type: "object",
  properties: {
    code: {
      type: "string",
      nullable: true,
    },
    message: {
      type: "string",
      nullable: true,
    },
    details: {
      type: "string",
      nullable: true,
    },
    data: {
      type: "object",
      additionalProperties: {},
      nullable: true,
    },
    validationErrors: {
      type: "array",
      items: {
        type: "object",
        properties: {
          message: {
            type: "string",
            nullable: true,
          },
          members: {
            type: "array",
            items: {
              type: "string",
            },
            nullable: true,
          },
        },
        additionalProperties: false,
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_RemoteServiceErrorResponse = {
  type: "object",
  properties: {
    error: {
      type: "object",
      properties: {
        code: {
          type: "string",
          nullable: true,
        },
        message: {
          type: "string",
          nullable: true,
        },
        details: {
          type: "string",
          nullable: true,
        },
        data: {
          type: "object",
          additionalProperties: {},
          nullable: true,
        },
        validationErrors: {
          type: "array",
          items: {
            type: "object",
            properties: {
              message: {
                type: "string",
                nullable: true,
              },
              members: {
                type: "array",
                items: {
                  type: "string",
                },
                nullable: true,
              },
            },
            additionalProperties: false,
          },
          nullable: true,
        },
      },
      additionalProperties: false,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Http_RemoteServiceValidationErrorInfo = {
  type: "object",
  properties: {
    message: {
      type: "string",
      nullable: true,
    },
    members: {
      type: "array",
      items: {
        type: "string",
      },
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_Localization_LanguageInfo = {
  type: "object",
  properties: {
    cultureName: {
      type: "string",
      nullable: true,
    },
    uiCultureName: {
      type: "string",
      nullable: true,
    },
    displayName: {
      type: "string",
      nullable: true,
    },
    twoLetterISOLanguageName: {
      type: "string",
      nullable: true,
      readOnly: true,
    },
  },
  additionalProperties: false,
} as const;

export const $Volo_Abp_NameValue = {
  type: "object",
  properties: {
    name: {
      type: "string",
      nullable: true,
    },
    value: {
      type: "string",
      nullable: true,
    },
  },
  additionalProperties: false,
} as const;
